!function(){"use strict";function e(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function t(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var n=function(){function n(t,r){var o;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,n),this._settings=t,this._formElement=r,this._inputSelector=t.inputSelector,this._submitButtonSelector=t.submitButtonSelector,this._inactiveButtonClass=t.inactiveButtonClass,this._inputErrorClass=t.inputErrorClass,this._errorClass=t.errorClass,this._inputList=function(t){if(Array.isArray(t))return e(t)}(o=r.querySelectorAll(t.inputSelector))||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(o)||function(t,n){if(t){if("string"==typeof t)return e(t,n);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?e(t,n):void 0}}(o)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(),this._buttonEl=r.querySelector(t.submitButtonSelector)}var r,o;return r=n,(o=[{key:"_showInputError",value:function(e){var t=this._formElement.querySelector("#".concat(e.id,"-error"));e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}},{key:"_hideInputError",value:function(e){var t=this._formElement.querySelector("#".concat(e.id,"-error"));e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}},{key:"_checkInputValidity",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}},{key:"toggleButtonState",value:function(){this._inputList.every((function(e){return e.validity.valid}))?(this._buttonEl.classList.remove(this._inactiveButtonClass),this._buttonEl.disabled=!1):(this._buttonEl.classList.add(this._inactiveButtonClass),this._buttonEl.disabled=!0)}},{key:"_setupEventListeners",value:function(){var e=this;this.toggleButtonState(),this._inputList.forEach((function(t){t.addEventListener("input",(function(n){e._checkInputValidity(t),e.toggleButtonState()}))}))}},{key:"enableValidation",value:function(){this._formElement.addEventListener("submit",(function(e){e.preventDefault()})),this._setupEventListeners()}},{key:"resetValidation",value:function(){var e=this;this.toggleButtonState(),this._inputList.forEach((function(t){e._hideInputError(t)}))}}])&&t(r.prototype,o),Object.defineProperty(r,"prototype",{writable:!1}),n}();function r(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var o=function(){function e(t,n){var r=t.data,o=t.handleCardClick,i=t.handleDeleteButton,a=t.handleLikeButton,u=t.currentId;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._data=r,this._name=r.name,this._link=r.link,this._cardID=r._id,this._ownerId=r.owner._id,this._handleCardClick=o,this._handleDeleteButton=i,this._handleLikeButton=a,this._currentId=u,this._cardSelector=n}var t,n;return t=e,(n=[{key:"_setupEventListeners",value:function(){var e=this;this._likeButton.addEventListener("click",(function(){return e._handleLikeButton()})),this._deleteButton.addEventListener("click",(function(){return e._handleDeleteButton(e._element)})),this._imageElement.addEventListener("click",(function(){return e._handleCardClick({name:e._name,link:e._link})}))}},{key:"isLiked",value:function(){var e=this;return this._data.likes.some((function(t){return t._id===e._currentId}))}},{key:"setLikes",value:function(e){this._data.likes=e,this._updateLikesView()}},{key:"_updateLikesView",value:function(){this.isLiked()?this._likeButton.classList.add("card__like-button_active"):this._likeButton.classList.remove("card__like-button_active"),this._likeCounter.textContent=this._data.likes.length}},{key:"_getTemplate",value:function(){var e=document.querySelector(this._cardSelector).content.firstElementChild.cloneNode(!0);return this._deleteButton=e.querySelector(".delete-button"),e}},{key:"getView",value:function(){var e=this;return this._element=this._getTemplate(),this._imageElement=this._element.querySelector(".card__image"),this._element.querySelector(".card__title").textContent=this._name,this._likeButton=this._element.querySelector(".card__like-button"),this._likeCounter=this._element.querySelector(".card__like-counter"),this._deleteButton=this._element.querySelector(".card__delete-button"),this._imageElement.src=this._link,this._imageElement.alt="Photo of ".concat(this._link),this._currentId!==this._ownerId&&this._deleteButton.classList.add("delete-button_hidden"),this._data.likes.some((function(t){return t._id===e._currentId}))?this._likeButton.classList.add("card__like-button_active"):this._likeButton.classList.remove("card__like-button_active"),this._likeCounter.textContent=this._data.likes.length,this._setupEventListeners(),this._element}}])&&r(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function i(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var a=function(){function e(t,n){var r=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderer=r,this._container=document.querySelector(n)}var t,n;return t=e,(n=[{key:"addItem",value:function(e){this._container.prepend(e)}},{key:"renderItems",value:function(e){var t=this;e.forEach((function(e){t._renderer(e)}))}}])&&i(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function u(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function c(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var l=function(){function e(t){var n=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),c(this,"_handleEscUp",(function(e){"Escape"===e.key&&n.close()})),c(this,"_mouseClick",(function(e){e.target===n._popupElement&&n.close()})),this._popupElement=document.querySelector(t),this._handleEscUp=this._handleEscUp.bind(this)}var t,n;return t=e,(n=[{key:"setEventListeners",value:function(){var e=this;this._popupElement.querySelector(".popup__close-button").addEventListener("click",(function(){e.close()}))}},{key:"open",value:function(){this._popupElement.classList.add("popup_opened"),document.addEventListener("keyup",this._handleEscUp),document.addEventListener("mousedown",this._mouseClick)}},{key:"close",value:function(){this._popupElement.classList.remove("popup_opened"),document.removeEventListener("keyup",this._handleEscUp),document.removeEventListener("mousedown",this._mouseClick)}}])&&u(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function s(e){return s="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},s(e)}function p(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function f(){return f="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=d(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},f.apply(this,arguments)}function d(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=_(e)););return e}function h(e,t){return h=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},h(e,t)}function y(e,t){if(t&&("object"===s(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function _(e){return _=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},_(e)}var v=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&h(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=_(r);if(o){var n=_(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return y(this,e)});function a(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,e))._previewImage=t._popupElement.querySelector(".popup__image"),t._previewImageTitle=t._popupElement.querySelector(".popup__caption"),t}return t=a,(n=[{key:"open",value:function(e){this._previewImage.src=e.link,this._previewImage.alt="Photo of ".concat(e.link),this._previewImageTitle.textContent=e.name,f(_(a.prototype),"open",this).call(this)}}])&&p(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(l);function m(e){return m="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},m(e)}function b(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function k(){return k="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=g(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},k.apply(this,arguments)}function g(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=E(e)););return e}function w(e,t){return w=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},w(e,t)}function S(e,t){if(t&&("object"===m(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function E(e){return E=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},E(e)}var O=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&w(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=E(r);if(o){var n=E(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return S(this,e)});function a(e){var t,n=e.popupSelector,r=e.handleFormSubmit;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,n))._form=t._popupElement.querySelector(".popup__form"),t._inputList=t._popupElement.querySelectorAll(".popup__input"),t._submitButton=t._popupElement.querySelector(".popup__save-button"),t._handleFormSubmit=r,t}return t=a,(n=[{key:"_getInputValues",value:function(){var e={};return this._inputList.forEach((function(t){e[t.name]=t.value})),e}},{key:"setEventListeners",value:function(){var e=this;k(E(a.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",(function(t){t.preventDefault(),e._handleFormSubmit(e._getInputValues())}))}},{key:"close",value:function(){k(E(a.prototype),"close",this).call(this),this._form.reset()}}])&&b(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(l);function L(e){return L="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},L(e)}function C(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function j(){return j="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=P(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},j.apply(this,arguments)}function P(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=q(e)););return e}function I(e,t){return I=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},I(e,t)}function B(e,t){if(t&&("object"===L(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function q(e){return q=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},q(e)}var R=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&I(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=q(r);if(o){var n=q(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return B(this,e)});function a(e){var t,n=e.popupSelector;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,n))._handleDeleteCard=t._handleDeleteCard,t}return t=a,(n=[{key:"open",value:function(e){j(q(a.prototype),"open",this).call(this),this.deleteCard=e}},{key:"setEventListeners",value:function(){var e=this;j(q(a.prototype),"setEventListeners",this).call(this),this._popupElement.addEventListener("submit",(function(t){t.preventDefault(),e.deleteCard()}))}}])&&C(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(l);function U(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function T(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var A=function(){function e(t){var n=this,r=t.nameSelector,o=t.descriptionSelector,i=t.avatarSelector;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),T(this,"getUserInfo",(function(){return{name:n._name.textContent,description:n._description.textContent,avatar:n._avatar.src}})),T(this,"setUserInfo",(function(e){var t=e.name,r=e.description;n._name.textContent=t,n._description.textContent=r})),this._name=document.querySelector(r),this._description=document.querySelector(o),this._avatar=document.querySelector(i)}var t,n;return t=e,(n=[{key:"getUserId",value:function(){return{_id:this._id}}},{key:"setAvatar",value:function(e){var t=e.userAvatar;t&&(this._avatar.src=t)}}])&&U(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}(),D={inputSelector:".popup__input",submitButtonSelector:".popup__save-button",inactiveButtonClass:"popup__save-button_type_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__error_visible"},x=(document.querySelector(".popup_type_add"),{editModal:".popup_type_edit",nameSelector:".profile__name",descriptionSelector:".profile__description",editButton:document.querySelector(".profile__edit-button"),closeButton:document.querySelector(".popup__close-button")}),V={selector:".popup_type_avatar",avatarSelector:".profile__image",button:document.querySelector(".avatar__edit-button"),form:document.querySelector(".popup_type_avatar"),avatarInput:document.querySelector("#avatar-input")},M={addModal:".popup_type_add",addButton:document.querySelector(".profile__add-button"),closeButton:document.querySelector(".popup__close-button")};function F(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}document.querySelector(".popup__close-button");var N=function(){function e(t){var n=t.baseUrl,r=t.headers;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._baseUrl=n,this._headers=r}var t,n;return t=e,(n=[{key:"_checkResponse",value:function(e){return e.ok?e.json():Promise.reject("Error ".concat(e.status))}},{key:"getAppInfo",value:function(){return Promise.all([this.getCardList(),this.getUserInfo()])}},{key:"getInitialCards",value:function(){return fetch("".concat(this._baseUrl,"/cards"),{headers:this._headers}).then(this._checkResponse)}},{key:"getUserInfo",value:function(){return fetch("".concat(this._baseUrl,"/users/me"),{headers:this._headers}).then(this._checkResponse)}},{key:"setUserInfo",value:function(e){var t=e.name,n=e.about;return fetch("".concat(this._baseUrl,"/users/me"),{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t,about:n})}).then(this._checkResponse)}},{key:"setUserAvatar",value:function(e){var t=e.avatar;return fetch("".concat(this._baseUrl,"/users/me/avatar"),{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:t})}).then(this._checkResponse)}},{key:"addCard",value:function(e){var t=e.name,n=e.link;return fetch("".concat(this._baseUrl,"/cards"),{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:n})}).then(this._checkResponse)}},{key:"removeCard",value:function(e){return fetch("".concat(this._baseUrl,"/cards/").concat(e),{method:"DELETE",headers:this._headers}).then(this._checkResponse)}},{key:"addLike",value:function(e){return fetch("".concat(this._baseUrl,"/cards/likes/").concat(e),{method:"PUT",headers:this._headers}).then(this._checkResponse)}},{key:"removeLike",value:function(e){return fetch("".concat(this._baseUrl,"/cards/likes/").concat(e),{method:"DELETE",headers:this._headers}).then(this._checkResponse)}}])&&F(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}(),J=function(e){var t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=document.querySelector(e).querySelector(".popup__save-button");n.textContent=t?"Saving...":"Save"};function $(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var H=new A({nameSelector:x.nameSelector,descriptionSelector:x.descriptionSelector,avatarSelector:V.avatarSelector}),z=new v(".popup_type_preview");z.setEventListeners();var G=new N({baseUrl:"https://around.nomoreparties.co/v1/group-12",headers:{authorization:"acca9dd3-a6a4-4626-88e2-60619602bdf9","Content-Type":"application/json"}});Promise.all([G.getUserInfo(),G.getInitialCards()]).then((function(e){var t,n,r=(n=2,function(e){if(Array.isArray(e))return e}(t=e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,i=[],a=!0,u=!1;try{for(n=n.call(e);!(a=(r=n.next()).done)&&(i.push(r.value),!t||i.length!==t);a=!0);}catch(e){u=!0,o=e}finally{try{a||null==n.return||n.return()}finally{if(u)throw o}}return i}}(t,n)||function(e,t){if(e){if("string"==typeof e)return $(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?$(e,t):void 0}}(t,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=r[0],i=r[1];H.name,H.about,K=o._id,G.setUserInfo({name:o.name,about:o.about}),W.renderItems(i.reverse())})).catch((function(e){return console.warn("${err}")}));var K=null,Q=function(e){var t=new o({currentId:K,data:e,handleCardClick:function(){z.open(e)},handleDeleteButton:function(t){ee.open((function(){G.removeCard(e._id).then((function(){t.remove(),ee.close()})).catch((function(e){console.log("There was an issue deleting this card: ".concat(e))}))}))},handleLikeButton:function(){t.isLiked()?G.removeLike(e._id).then((function(e){console.log("res",e),t.setLikes(e.likes)})).catch((function(e){console.log(e)})):G.addLike(e._id).then((function(e){console.log("res",e),t.setLikes(e.likes)})).catch((function(e){console.log(e)}))}},"#cardTemplate");return console.log(t),t},W=new a({renderer:function(e){var t=Q(e).getView();W.addItem(t)}},"#placesList"),X=new O({popupSelector:x.editModal,handleFormSubmit:function(e){J(x.editModal,!0),G.setUserInfo({name:e.name,about:e.description}).then((function(e){H.setUserInfo({name:e.name,description:e.about}),X.close()})).catch((function(e){return console.warn("Unable to update profile information: ".concat(e))})).finally((function(){J(x.editModal)}))}}),Y=new O({popupSelector:V.selector,handleFormSubmit:function(e){J(V.selector,!0),G.setUserAvatar({avatar:e.avatar}).then((function(e){H.setAvatar({userAvatar:e.avatar}),Y.close()})).catch((function(e){return console.warn("Unable change the user avatar: ".concat(e))})).finally((function(){J(V.selector)}))}}),Z=new O({popupSelector:M.addModal,handleFormSubmit:function(e){J(M.addModal,!0),G.addCard(e).then((function(e){var t=Q(e);W.addItem(t.getView()),Z.close()})).catch((function(e){return console.warn("Unable to add a card: ".concat(e))})).finally((function(){J(M.addModal)}))}}),ee=new R({popupSelector:".popup_type_delete",handleDeleteCard:function(){}}),te=document.querySelector("#owner-name"),ne=document.querySelector("#owner-description");X.setEventListeners(),Y.setEventListeners(),Z.setEventListeners(),ee.setEventListeners(),x.editButton.addEventListener("click",(function(){var e=H.getUserInfo();te.value=e.name,ne.value=e.description,X.open(e)})),V.button.addEventListener("click",(function(){Y.open()})),M.addButton.addEventListener("click",(function(){Z.open()}));var re=document.querySelector(".popup_type_edit"),oe=document.querySelector(".popup_type_avatar"),ie=document.querySelector(".popup_type_add");new n(D,re).enableValidation(),new n(D,oe).enableValidation(),new n(D,ie).enableValidation()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QiIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYl9wcm9qZWN0XzQvLi9zcmMvY29tcG9uZW50cy9Gb3JtVmFsaWRhdG9yLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzQvLi9zcmMvY29tcG9uZW50cy9DYXJkLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzQvLi9zcmMvY29tcG9uZW50cy9TZWN0aW9uLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzQvLi9zcmMvY29tcG9uZW50cy9Qb3B1cC5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF80Ly4vc3JjL2NvbXBvbmVudHMvUG9wdXBXaXRoSW1hZ2UuanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNC8uL3NyYy9jb21wb25lbnRzL1BvcHVwV2l0aEZvcm0uanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNC8uL3NyYy9jb21wb25lbnRzL1BvcHVwV2l0aENvbmZpcm1hdGlvbi5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF80Ly4vc3JjL2NvbXBvbmVudHMvVXNlckluZm8uanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNC8uL3NyYy91dGlscy9jb25zdGFudHMuanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNC8uL3NyYy9jb21wb25lbnRzL0FwaS5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF80Ly4vc3JjL3V0aWxzL3V0aWxzLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzQvLi9zcmMvcGFnZXMvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiY2xhc3MgRm9ybVZhbGlkYXRvciB7XHJcbiAgICBjb25zdHJ1Y3RvcihzZXR0aW5ncywgZm9ybUVsZW1lbnQpIHtcclxuICAgICAgICB0aGlzLl9zZXR0aW5ncyA9IHNldHRpbmdzO1xyXG4gICAgICAgIHRoaXMuX2Zvcm1FbGVtZW50ID0gZm9ybUVsZW1lbnQ7XHJcbiAgICAgICAgdGhpcy5faW5wdXRTZWxlY3RvciA9IHNldHRpbmdzLmlucHV0U2VsZWN0b3I7XHJcbiAgICAgICAgdGhpcy5fc3VibWl0QnV0dG9uU2VsZWN0b3IgPSBzZXR0aW5ncy5zdWJtaXRCdXR0b25TZWxlY3RvcjtcclxuICAgICAgICB0aGlzLl9pbmFjdGl2ZUJ1dHRvbkNsYXNzID0gc2V0dGluZ3MuaW5hY3RpdmVCdXR0b25DbGFzcztcclxuICAgICAgICB0aGlzLl9pbnB1dEVycm9yQ2xhc3MgPSBzZXR0aW5ncy5pbnB1dEVycm9yQ2xhc3M7XHJcbiAgICAgICAgdGhpcy5fZXJyb3JDbGFzcyA9IHNldHRpbmdzLmVycm9yQ2xhc3M7XHJcbiAgICAgICAgdGhpcy5faW5wdXRMaXN0ID0gWy4uLmZvcm1FbGVtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoc2V0dGluZ3MuaW5wdXRTZWxlY3RvcildO1xyXG4gICAgICAgIHRoaXMuX2J1dHRvbkVsID0gZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvcihzZXR0aW5ncy5zdWJtaXRCdXR0b25TZWxlY3Rvcik7XHJcbiAgICB9XHJcblxyXG4gICAgX3Nob3dJbnB1dEVycm9yKGlucHV0RWwpIHtcclxuICAgICAgICBjb25zdCBlcnJvckVsID0gdGhpcy5fZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvcihgIyR7aW5wdXRFbC5pZH0tZXJyb3JgKTtcclxuICAgICAgICBpbnB1dEVsLmNsYXNzTGlzdC5hZGQodGhpcy5faW5wdXRFcnJvckNsYXNzKTtcclxuICAgICAgICBlcnJvckVsLnRleHRDb250ZW50ID0gaW5wdXRFbC52YWxpZGF0aW9uTWVzc2FnZTtcclxuICAgICAgICBlcnJvckVsLmNsYXNzTGlzdC5hZGQodGhpcy5fZXJyb3JDbGFzcyk7XHJcbiAgICB9XHJcblxyXG4gICAgX2hpZGVJbnB1dEVycm9yKGlucHV0RWwpIHtcclxuICAgICAgICBjb25zdCBlcnJvckVsID0gdGhpcy5fZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvcihgIyR7aW5wdXRFbC5pZH0tZXJyb3JgKTtcclxuICAgICAgICBpbnB1dEVsLmNsYXNzTGlzdC5yZW1vdmUodGhpcy5faW5wdXRFcnJvckNsYXNzKTtcclxuICAgICAgICBlcnJvckVsLnRleHRDb250ZW50ID0gJyc7XHJcbiAgICAgICAgZXJyb3JFbC5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX2Vycm9yQ2xhc3MpO1xyXG4gICAgfVxyXG5cclxuICAgIF9jaGVja0lucHV0VmFsaWRpdHkoaW5wdXRFbCkge1xyXG4gICAgICAgIGlmICghaW5wdXRFbC52YWxpZGl0eS52YWxpZCkge1xyXG4gICAgICAgICAgICB0aGlzLl9zaG93SW5wdXRFcnJvcihpbnB1dEVsKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICB0aGlzLl9oaWRlSW5wdXRFcnJvcihpbnB1dEVsKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgdG9nZ2xlQnV0dG9uU3RhdGUoKSB7XHJcbiAgICAgICAgY29uc3QgYWxsVmFsaWQgPSB0aGlzLl9pbnB1dExpc3QuZXZlcnkoKGlucHV0RWwpID0+IGlucHV0RWwudmFsaWRpdHkudmFsaWQpO1xyXG4gICAgICAgIGlmIChhbGxWYWxpZCkge1xyXG4gICAgICAgICAgICB0aGlzLl9idXR0b25FbC5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX2luYWN0aXZlQnV0dG9uQ2xhc3MpO1xyXG4gICAgICAgICAgICB0aGlzLl9idXR0b25FbC5kaXNhYmxlZCA9IGZhbHNlO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHRoaXMuX2J1dHRvbkVsLmNsYXNzTGlzdC5hZGQodGhpcy5faW5hY3RpdmVCdXR0b25DbGFzcyk7XHJcbiAgICAgICAgICAgIHRoaXMuX2J1dHRvbkVsLmRpc2FibGVkID0gdHJ1ZTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgX3NldHVwRXZlbnRMaXN0ZW5lcnMoKSB7XHJcbiAgICAgICAgdGhpcy50b2dnbGVCdXR0b25TdGF0ZSgpO1xyXG4gICAgICAgIHRoaXMuX2lucHV0TGlzdC5mb3JFYWNoKChpbnB1dEVsKSA9PiB7XHJcbiAgICAgICAgICAgIGlucHV0RWwuYWRkRXZlbnRMaXN0ZW5lcihcImlucHV0XCIsIChlKSA9PiB7XHJcblxyXG4gICAgICAgICAgICAgICAgdGhpcy5fY2hlY2tJbnB1dFZhbGlkaXR5KGlucHV0RWwpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy50b2dnbGVCdXR0b25TdGF0ZSgpO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICBlbmFibGVWYWxpZGF0aW9uKCkge1xyXG4gICAgICAgIHRoaXMuX2Zvcm1FbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJzdWJtaXRcIiwgKGV2dCkgPT4ge1xyXG4gICAgICAgICAgICBldnQucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgdGhpcy5fc2V0dXBFdmVudExpc3RlbmVycygpO1xyXG4gICAgfVxyXG5cclxuICAgIHJlc2V0VmFsaWRhdGlvbigpIHtcclxuICAgICAgICB0aGlzLnRvZ2dsZUJ1dHRvblN0YXRlKCk7XHJcblxyXG4gICAgICAgIHRoaXMuX2lucHV0TGlzdC5mb3JFYWNoKChpbnB1dEVsZW1lbnQpID0+IHtcclxuICAgICAgICAgICAgdGhpcy5faGlkZUlucHV0RXJyb3IoaW5wdXRFbGVtZW50KTtcclxuICAgICAgICB9KTtcclxuICAgIH1cclxufVxyXG5cclxuXHJcbmV4cG9ydCBkZWZhdWx0IEZvcm1WYWxpZGF0b3I7IiwiY2xhc3MgQ2FyZCB7XHJcbiAgICBjb25zdHJ1Y3Rvcih7IGRhdGEsIGhhbmRsZUNhcmRDbGljaywgaGFuZGxlRGVsZXRlQnV0dG9uLCBoYW5kbGVMaWtlQnV0dG9uLCBjdXJyZW50SWQgfSwgY2FyZFNlbGVjdG9yKSB7XHJcbiAgICAgICAgdGhpcy5fZGF0YSA9IGRhdGE7XHJcbiAgICAgICAgdGhpcy5fbmFtZSA9IGRhdGEubmFtZTtcclxuICAgICAgICB0aGlzLl9saW5rID0gZGF0YS5saW5rO1xyXG4gICAgICAgIHRoaXMuX2NhcmRJRCA9IGRhdGEuX2lkO1xyXG4gICAgICAgIHRoaXMuX293bmVySWQgPSBkYXRhLm93bmVyLl9pZDtcclxuICAgICAgICB0aGlzLl9oYW5kbGVDYXJkQ2xpY2sgPSBoYW5kbGVDYXJkQ2xpY2s7XHJcbiAgICAgICAgdGhpcy5faGFuZGxlRGVsZXRlQnV0dG9uID0gaGFuZGxlRGVsZXRlQnV0dG9uO1xyXG4gICAgICAgIHRoaXMuX2hhbmRsZUxpa2VCdXR0b24gPSBoYW5kbGVMaWtlQnV0dG9uO1xyXG4gICAgICAgIHRoaXMuX2N1cnJlbnRJZCA9IGN1cnJlbnRJZDtcclxuICAgICAgICB0aGlzLl9jYXJkU2VsZWN0b3IgPSBjYXJkU2VsZWN0b3I7XHJcbiAgICB9XHJcblxyXG4gICAgICAgIF9zZXR1cEV2ZW50TGlzdGVuZXJzKCkge1xyXG4gICAgICAgICAgICB0aGlzLl9saWtlQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4gdGhpcy5faGFuZGxlTGlrZUJ1dHRvbigpKTtcclxuICAgICAgICAgICAgdGhpcy5fZGVsZXRlQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4gdGhpcy5faGFuZGxlRGVsZXRlQnV0dG9uKHRoaXMuX2VsZW1lbnQpKTtcclxuICAgICAgICAgICAgdGhpcy5faW1hZ2VFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4gdGhpcy5faGFuZGxlQ2FyZENsaWNrKHsgbmFtZTogdGhpcy5fbmFtZSwgbGluazogdGhpcy5fbGluayB9KSk7XHJcbiAgICB9XHJcblxyXG4gICAgaXNMaWtlZCgpIHtcclxuICAgICAgIHJldHVybiB0aGlzLl9kYXRhLmxpa2VzLnNvbWUoKGxpa2UpID0+IHtcclxuICAgICAgICAgICAgaWYgKGxpa2UuX2lkID09PSB0aGlzLl9jdXJyZW50SWQpIHtcclxuICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICBzZXRMaWtlcyhsaWtlcykge1xyXG4gICAgICAgIHRoaXMuX2RhdGEubGlrZXMgPSBsaWtlcztcclxuICAgICAgICB0aGlzLl91cGRhdGVMaWtlc1ZpZXcoKTtcclxuICAgIH1cclxuXHJcblxyXG4gICAgX3VwZGF0ZUxpa2VzVmlldygpIHtcclxuICAgICAgICBpZih0aGlzLmlzTGlrZWQoKSl7XHJcbiAgICAgICAgICAgIHRoaXMuX2xpa2VCdXR0b24uY2xhc3NMaXN0LmFkZCgnY2FyZF9fbGlrZS1idXR0b25fYWN0aXZlJyk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgdGhpcy5fbGlrZUJ1dHRvbi5jbGFzc0xpc3QucmVtb3ZlKCdjYXJkX19saWtlLWJ1dHRvbl9hY3RpdmUnKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5fbGlrZUNvdW50ZXIudGV4dENvbnRlbnQgPSB0aGlzLl9kYXRhLmxpa2VzLmxlbmd0aDtcclxuXHJcbiAgICBcclxuICAgICAgfVxyXG5cclxuXHJcbiAgICBfZ2V0VGVtcGxhdGUoKSB7XHJcbiAgICAgICAgY29uc3QgY2FyZEVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRoaXMuX2NhcmRTZWxlY3RvcikuY29udGVudC5maXJzdEVsZW1lbnRDaGlsZC5jbG9uZU5vZGUodHJ1ZSk7XHJcbiAgICAgICAgdGhpcy5fZGVsZXRlQnV0dG9uID0gY2FyZEVsZW1lbnQucXVlcnlTZWxlY3RvcihcclxuICAgICAgICAgICAgJy5kZWxldGUtYnV0dG9uJyxcclxuICAgICAgICAgICk7XHJcbiAgICAgICAgcmV0dXJuIGNhcmRFbGVtZW50O1xyXG4gICAgfVxyXG5cclxuICAgIGdldFZpZXcoKSB7XHJcbiAgICAgICAgdGhpcy5fZWxlbWVudCA9IHRoaXMuX2dldFRlbXBsYXRlKCk7XHJcbiAgICAgICAgdGhpcy5faW1hZ2VFbGVtZW50ID0gdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRfX2ltYWdlXCIpO1xyXG4gICAgICAgIHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5jYXJkX190aXRsZVwiKS50ZXh0Q29udGVudCA9IHRoaXMuX25hbWU7XHJcbiAgICAgICAgdGhpcy5fbGlrZUJ1dHRvbiA9IHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5jYXJkX19saWtlLWJ1dHRvblwiKTtcclxuICAgICAgICB0aGlzLl9saWtlQ291bnRlciA9IHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcignLmNhcmRfX2xpa2UtY291bnRlcicpO1xyXG4gICAgICAgIHRoaXMuX2RlbGV0ZUJ1dHRvbiA9IHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5jYXJkX19kZWxldGUtYnV0dG9uXCIpO1xyXG4gICAgICAgIHRoaXMuX2ltYWdlRWxlbWVudC5zcmMgPSB0aGlzLl9saW5rO1xyXG4gICAgICAgIHRoaXMuX2ltYWdlRWxlbWVudC5hbHQgPSBgUGhvdG8gb2YgJHt0aGlzLl9saW5rfWA7XHJcbiAgICAgICAgaWYgKHRoaXMuX2N1cnJlbnRJZCAhPT0gdGhpcy5fb3duZXJJZCkge1xyXG4gICAgICAgICAgICB0aGlzLl9kZWxldGVCdXR0b24uY2xhc3NMaXN0LmFkZCgnZGVsZXRlLWJ1dHRvbl9oaWRkZW4nKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgY29uc3QgaXNMaWtlZCA9IHRoaXMuX2RhdGEubGlrZXMuc29tZSgobGlrZSkgPT4ge1xyXG4gICAgICAgICAgICBpZiAobGlrZS5faWQgPT09IHRoaXMuX2N1cnJlbnRJZCkge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICBpZiAoaXNMaWtlZCkge1xyXG4gICAgICAgICAgICB0aGlzLl9saWtlQnV0dG9uLmNsYXNzTGlzdC5hZGQoJ2NhcmRfX2xpa2UtYnV0dG9uX2FjdGl2ZScpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHRoaXMuX2xpa2VCdXR0b24uY2xhc3NMaXN0LnJlbW92ZSgnY2FyZF9fbGlrZS1idXR0b25fYWN0aXZlJyk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICB0aGlzLl9saWtlQ291bnRlci50ZXh0Q29udGVudCA9IHRoaXMuX2RhdGEubGlrZXMubGVuZ3RoO1xyXG5cclxuICAgICAgICB0aGlzLl9zZXR1cEV2ZW50TGlzdGVuZXJzKCk7XHJcbiAgICAgICAgXHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2VsZW1lbnQ7XHJcbiAgICB9XHJcblxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBDYXJkOyIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFNlY3Rpb24ge1xyXG4gICAgY29uc3RydWN0b3IoeyByZW5kZXJlciB9LCBjb250YWluZXJTZWxlY3Rvcikge1xyXG4gICAgICB0aGlzLl9yZW5kZXJlciA9IHJlbmRlcmVyO1xyXG4gICAgICB0aGlzLl9jb250YWluZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGNvbnRhaW5lclNlbGVjdG9yKTsgICAgICBcclxuICAgIH1cclxuXHJcbiAgICBhZGRJdGVtKGVsZW1lbnQpIHtcclxuICAgICAgdGhpcy5fY29udGFpbmVyLnByZXBlbmQoZWxlbWVudCk7XHJcbiAgICAgIH1cclxuXHJcbiAgICByZW5kZXJJdGVtcyhpdGVtcykge1xyXG4gICAgICBpdGVtcy5mb3JFYWNoKChpdGVtKSA9PiB7XHJcbiAgICAgICAgICB0aGlzLl9yZW5kZXJlcihpdGVtKTtcclxuICAgICAgfSk7XHJcbiAgICB9XHJcbn0iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cCB7XHJcbiAgICBjb25zdHJ1Y3Rvcihwb3B1cFNlbGVjdG9yKSB7XHJcbiAgICAgICAgdGhpcy5fcG9wdXBFbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcihwb3B1cFNlbGVjdG9yKTtcclxuICAgICAgICB0aGlzLl9oYW5kbGVFc2NVcCA9IHRoaXMuX2hhbmRsZUVzY1VwLmJpbmQodGhpcyk7XHJcbiAgICB9XHJcblxyXG4gICAgc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XHJcbiAgICAgICAgY29uc3QgY2xvc2VCdXR0b24gPSB0aGlzLl9wb3B1cEVsZW1lbnQucXVlcnlTZWxlY3RvcignLnBvcHVwX19jbG9zZS1idXR0b24nKTtcclxuICAgICAgICBjbG9zZUJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcclxuICAgICAgICAgIHRoaXMuY2xvc2UoKTtcclxuICAgICAgICB9KTtcclxuICAgICAgfSAgICBcclxuXHJcbiAgICBvcGVuKCkge1xyXG4gICAgICAgIHRoaXMuX3BvcHVwRWxlbWVudC5jbGFzc0xpc3QuYWRkKCdwb3B1cF9vcGVuZWQnKTtcclxuICAgICAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdrZXl1cCcsIHRoaXMuX2hhbmRsZUVzY1VwKTtcclxuICAgICAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdtb3VzZWRvd24nLCB0aGlzLl9tb3VzZUNsaWNrKTtcclxuICAgIH1cclxuXHJcbiAgICBjbG9zZSgpIHtcclxuICAgICAgICB0aGlzLl9wb3B1cEVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSgncG9wdXBfb3BlbmVkJyk7XHJcbiAgICAgICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcigna2V5dXAnLCB0aGlzLl9oYW5kbGVFc2NVcCk7XHJcbiAgICAgICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcignbW91c2Vkb3duJywgdGhpcy5fbW91c2VDbGljayk7XHJcbiAgICB9XHJcblxyXG4gICAgX2hhbmRsZUVzY1VwID0gKGV2dCkgPT4ge1xyXG4gICAgICAgIGlmIChldnQua2V5ID09PSBcIkVzY2FwZVwiKSB7XHJcbiAgICAgICAgICAgIHRoaXMuY2xvc2UoKTtcclxuICAgICAgICB9XHJcbiAgICB9O1xyXG5cclxuICAgIF9tb3VzZUNsaWNrID0gKGV2dCkgPT4ge1xyXG4gICAgICAgIGlmIChldnQudGFyZ2V0ID09PSB0aGlzLl9wb3B1cEVsZW1lbnQpIHtcclxuICAgICAgICAgIHRoaXMuY2xvc2UoKTtcclxuICAgICAgICB9XHJcbiAgICAgIH07ICAgIFxyXG59IiwiaW1wb3J0IFBvcHVwIGZyb20gJy4vUG9wdXAnO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXBXaXRoSW1hZ2UgZXh0ZW5kcyBQb3B1cCB7XHJcbiAgY29uc3RydWN0b3IocG9wdXBTZWxlY3Rvcikge1xyXG4gICAgc3VwZXIocG9wdXBTZWxlY3Rvcik7XHJcbiAgICB0aGlzLl9wcmV2aWV3SW1hZ2UgPSB0aGlzLl9wb3B1cEVsZW1lbnQucXVlcnlTZWxlY3RvcihcclxuICAgICAgJy5wb3B1cF9faW1hZ2UnLFxyXG4gICAgKTtcclxuICAgIHRoaXMuX3ByZXZpZXdJbWFnZVRpdGxlID0gdGhpcy5fcG9wdXBFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXHJcbiAgICAgICcucG9wdXBfX2NhcHRpb24nLFxyXG4gICAgKTtcclxuICB9XHJcblxyXG4gIG9wZW4oZGF0YSkge1xyXG4gICAgdGhpcy5fcHJldmlld0ltYWdlLnNyYyA9IGRhdGEubGluaztcclxuICAgIHRoaXMuX3ByZXZpZXdJbWFnZS5hbHQgPSBgUGhvdG8gb2YgJHtkYXRhLmxpbmt9YDtcclxuICAgIHRoaXMuX3ByZXZpZXdJbWFnZVRpdGxlLnRleHRDb250ZW50ID0gZGF0YS5uYW1lO1xyXG4gICAgc3VwZXIub3BlbigpO1xyXG4gIH1cclxufSIsImltcG9ydCBQb3B1cCBmcm9tICcuL1BvcHVwJztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwV2l0aEZvcm0gZXh0ZW5kcyBQb3B1cCB7XHJcbiAgY29uc3RydWN0b3IoeyBwb3B1cFNlbGVjdG9yLCBoYW5kbGVGb3JtU3VibWl0IH0pIHtcclxuICAgIHN1cGVyKHBvcHVwU2VsZWN0b3IpO1xyXG4gICAgdGhpcy5fZm9ybSA9IHRoaXMuX3BvcHVwRWxlbWVudC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX2Zvcm0nKTtcclxuICAgIHRoaXMuX2lucHV0TGlzdCA9IHRoaXMuX3BvcHVwRWxlbWVudC5xdWVyeVNlbGVjdG9yQWxsKCcucG9wdXBfX2lucHV0Jyk7XHJcbiAgICB0aGlzLl9zdWJtaXRCdXR0b24gPSB0aGlzLl9wb3B1cEVsZW1lbnQucXVlcnlTZWxlY3RvcignLnBvcHVwX19zYXZlLWJ1dHRvbicpO1xyXG4gICAgdGhpcy5faGFuZGxlRm9ybVN1Ym1pdCA9IGhhbmRsZUZvcm1TdWJtaXQ7XHJcbiAgfVxyXG5cclxuICBfZ2V0SW5wdXRWYWx1ZXMoKSB7XHJcbiAgICBjb25zdCBpbnB1dFZhbHVlID0ge307XHJcbiAgICB0aGlzLl9pbnB1dExpc3QuZm9yRWFjaCgoaW5wdXQpID0+IHtcclxuICAgICAgaW5wdXRWYWx1ZVtpbnB1dC5uYW1lXSA9IGlucHV0LnZhbHVlO1xyXG4gICAgfSk7XHJcbiAgICByZXR1cm4gaW5wdXRWYWx1ZTtcclxuICB9XHJcbiAgXHJcbiAgc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XHJcbiAgICBzdXBlci5zZXRFdmVudExpc3RlbmVycygpO1xyXG4gICAgdGhpcy5fZm9ybS5hZGRFdmVudExpc3RlbmVyKCdzdWJtaXQnLCAoZXZ0KSA9PiB7XHJcbiAgICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICB0aGlzLl9oYW5kbGVGb3JtU3VibWl0KHRoaXMuX2dldElucHV0VmFsdWVzKCkpO1xyXG4gIH0pXHJcbiB9XHJcblxyXG4gIGNsb3NlKCkge1xyXG4gICAgc3VwZXIuY2xvc2UoKTtcclxuICAgIHRoaXMuX2Zvcm0ucmVzZXQoKTtcclxuICB9XHJcbn0iLCJpbXBvcnQgUG9wdXAgZnJvbSAnLi9Qb3B1cCc7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cFdpdGhDb25maXJtYXRpb24gZXh0ZW5kcyBQb3B1cCB7XHJcbiAgY29uc3RydWN0b3Ioe3BvcHVwU2VsZWN0b3IgfSkge1xyXG4gICAgc3VwZXIocG9wdXBTZWxlY3Rvcik7XHJcbiAgICB0aGlzLl9oYW5kbGVEZWxldGVDYXJkID0gdGhpcy5faGFuZGxlRGVsZXRlQ2FyZDtcclxuICB9XHJcblxyXG4gIG9wZW4oZGVsZXRlQ2FyZCkge1xyXG4gICAgc3VwZXIub3BlbigpO1xyXG4gICAgdGhpcy5kZWxldGVDYXJkID0gZGVsZXRlQ2FyZDtcclxuICB9XHJcblxyXG4gIHNldEV2ZW50TGlzdGVuZXJzKCkge1xyXG4gICAgc3VwZXIuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuICAgIFxyXG4gICAgdGhpcy5fcG9wdXBFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJzdWJtaXRcIiwgKGV2dCkgPT4ge1xyXG4gICAgICBldnQucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgdGhpcy5kZWxldGVDYXJkKCk7XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIC8vIG9wZW4oY2FyZElELCBlbGVtZW50KSB7XHJcbiAgLy8gICB0aGlzLl9jYXJkSUQgPSBjYXJkSUQ7XHJcbiAgLy8gICB0aGlzLl9lbGVtZW50ID0gZWxlbWVudDtcclxuICAvLyAgIHN1cGVyLm9wZW4oKTtcclxuICAvLyB9XHJcbn0iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBVc2VySW5mbyB7XHJcbiAgICBjb25zdHJ1Y3Rvcih7IG5hbWVTZWxlY3RvciwgZGVzY3JpcHRpb25TZWxlY3RvciwgYXZhdGFyU2VsZWN0b3IgfSkge1xyXG4gICAgICAgIHRoaXMuX25hbWUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKG5hbWVTZWxlY3Rvcik7XHJcbiAgICAgICAgdGhpcy5fZGVzY3JpcHRpb24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGRlc2NyaXB0aW9uU2VsZWN0b3IpO1xyXG4gICAgICAgIHRoaXMuX2F2YXRhciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYXZhdGFyU2VsZWN0b3IpO1xyXG4gICAgfVxyXG5cclxuICAgIGdldFVzZXJJbmZvID0gKCkgPT4ge1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgIG5hbWU6IHRoaXMuX25hbWUudGV4dENvbnRlbnQsXHJcbiAgICAgICAgICAgIGRlc2NyaXB0aW9uOiB0aGlzLl9kZXNjcmlwdGlvbi50ZXh0Q29udGVudCxcclxuICAgICAgICAgICAgYXZhdGFyOiB0aGlzLl9hdmF0YXIuc3JjLFxyXG4gICAgICAgIH07XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0VXNlcklkICgpIHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICBfaWQ6IHRoaXMuX2lkLFxyXG4gICAgICB9O1xyXG4gICAgfVxyXG5cclxuICAgIHNldFVzZXJJbmZvID0gKHsgbmFtZSwgZGVzY3JpcHRpb24gfSkgID0+IHtcclxuICAgICAgICB0aGlzLl9uYW1lLnRleHRDb250ZW50ID0gbmFtZTtcclxuICAgICAgICB0aGlzLl9kZXNjcmlwdGlvbi50ZXh0Q29udGVudCA9IGRlc2NyaXB0aW9uO1xyXG4gICAgICAgIC8vIHRoaXMuX2F2YXRhci5zcmMgPSBhdmF0YXI7XHJcbiAgICB9XHJcblxyXG4gICAgc2V0QXZhdGFyKHsgdXNlckF2YXRhciB9KSB7XHJcbiAgICAgICAgaWYgKHVzZXJBdmF0YXIpIHtcclxuICAgICAgICB0aGlzLl9hdmF0YXIuc3JjID0gdXNlckF2YXRhcjtcclxuICAgIH1cclxufVxyXG59IiwiZXhwb3J0IGNvbnN0IGZvcm1WYWxpZGF0aW9uU2V0dGluZ3MgPSB7XHJcbiAgICBpbnB1dFNlbGVjdG9yOiBcIi5wb3B1cF9faW5wdXRcIixcclxuICAgIHN1Ym1pdEJ1dHRvblNlbGVjdG9yOiBcIi5wb3B1cF9fc2F2ZS1idXR0b25cIixcclxuICAgIGluYWN0aXZlQnV0dG9uQ2xhc3M6IFwicG9wdXBfX3NhdmUtYnV0dG9uX3R5cGVfZGlzYWJsZWRcIixcclxuICAgIGlucHV0RXJyb3JDbGFzczogXCJwb3B1cF9faW5wdXRfdHlwZV9lcnJvclwiLFxyXG4gICAgZXJyb3JDbGFzczogXCJwb3B1cF9fZXJyb3JfdmlzaWJsZVwiLFxyXG4gIH07XHJcblxyXG4gIGV4cG9ydCBjb25zdCBzZWxlY3RvcnMgPSB7XHJcbiAgICAgIGNhcmRTZWN0aW9uOiAnI3BsYWNlc0xpc3QnLFxyXG4gICAgICBjYXJkVGVtcGxhdGU6ICcjY2FyZFRlbXBsYXRlJyxcclxuICAgICAgcHJldmlld1BvcHVwOiAnLnBvcHVwX3R5cGVfcHJldmlldycsXHJcbiAgICAgIGFkZE1vZGFsOiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwX3R5cGVfYWRkXCIpLFxyXG4gIH07XHJcblxyXG4gIGV4cG9ydCBjb25zdCBwb3B1cEVkaXRVc2VyID0ge1xyXG4gICAgZWRpdE1vZGFsOiBcIi5wb3B1cF90eXBlX2VkaXRcIixcclxuICAgIG5hbWVTZWxlY3RvcjogXCIucHJvZmlsZV9fbmFtZVwiLFxyXG4gICAgZGVzY3JpcHRpb25TZWxlY3RvcjogXCIucHJvZmlsZV9fZGVzY3JpcHRpb25cIixcclxuICAgIGVkaXRCdXR0b246IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvZmlsZV9fZWRpdC1idXR0b25cIiksXHJcbiAgICBjbG9zZUJ1dHRvbjogZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wb3B1cF9fY2xvc2UtYnV0dG9uXCIpLFxyXG4gIH1cclxuXHJcbiAgZXhwb3J0IGNvbnN0IHBvcHVwRWRpdEF2YXRhciA9IHtcclxuICAgIHNlbGVjdG9yOiAnLnBvcHVwX3R5cGVfYXZhdGFyJyxcclxuICAgIGF2YXRhclNlbGVjdG9yOiAnLnByb2ZpbGVfX2ltYWdlJyxcclxuICAgIGJ1dHRvbjogZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmF2YXRhcl9fZWRpdC1idXR0b24nKSxcclxuICAgIGZvcm06IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF90eXBlX2F2YXRhcicpLFxyXG4gICAgYXZhdGFySW5wdXQ6IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNhdmF0YXItaW5wdXQnKSxcclxuICB9OyAgXHJcblxyXG4gIGV4cG9ydCBjb25zdCBwb3B1cEFkZENhcmQgPSB7XHJcbiAgICBhZGRNb2RhbDogXCIucG9wdXBfdHlwZV9hZGRcIixcclxuICAgIGFkZEJ1dHRvbjogZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnByb2ZpbGVfX2FkZC1idXR0b24nKSxcclxuICAgIGNsb3NlQnV0dG9uOiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX2Nsb3NlLWJ1dHRvbicpLFxyXG4gIH1cclxuICBcclxuICBleHBvcnQgY29uc3QgcG9wdXBEZWxldGVDYXJkID0ge1xyXG4gIGRlbGV0ZUNhcmRTZWxlY3RvcjogXCIucG9wdXBfdHlwZV9kZWxldGVcIixcclxuICBkZWxldGVDYXJkQnV0dG9uOiBcIi5kZWxldGUtYnV0dG9uXCIsXHJcbiAgY2xvc2VCdXR0b246IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9fY2xvc2UtYnV0dG9uJyksXHJcbiB9XHJcbiAiLCJjbGFzcyBBcGkge1xyXG4gIGNvbnN0cnVjdG9yKHsgYmFzZVVybCwgaGVhZGVycyB9KSB7XHJcbiAgICB0aGlzLl9iYXNlVXJsID0gYmFzZVVybDtcclxuICAgIHRoaXMuX2hlYWRlcnMgPSBoZWFkZXJzO1xyXG4gIH1cclxuICBcclxuICBfY2hlY2tSZXNwb25zZShyZXMpIHtcclxuICAgIGlmIChyZXMub2spIHtcclxuICAgICAgcmV0dXJuIHJlcy5qc29uKCk7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoYEVycm9yICR7cmVzLnN0YXR1c31gKTtcclxuICB9XHJcblxyXG4gIGdldEFwcEluZm8oKSB7XHJcbiAgICByZXR1cm4gUHJvbWlzZS5hbGwoW3RoaXMuZ2V0Q2FyZExpc3QoKSwgdGhpcy5nZXRVc2VySW5mbygpXSk7XHJcbiAgfVxyXG5cclxuICBnZXRJbml0aWFsQ2FyZHMoKSB7XHJcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fYmFzZVVybH0vY2FyZHNgLCB7XHJcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXHJcbiAgICB9KS50aGVuKHRoaXMuX2NoZWNrUmVzcG9uc2UpO1xyXG4gIH1cclxuXHJcbiAgZ2V0VXNlckluZm8oKSB7XHJcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fYmFzZVVybH0vdXNlcnMvbWVgLCB7XHJcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXHJcbiAgICB9KS50aGVuKHRoaXMuX2NoZWNrUmVzcG9uc2UpO1xyXG4gIH1cclxuXHJcbiAgc2V0VXNlckluZm8oeyBuYW1lLCBhYm91dCB9KSB7XHJcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fYmFzZVVybH0vdXNlcnMvbWVgLCB7XHJcbiAgICAgIG1ldGhvZDogJ1BBVENIJyxcclxuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcclxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoeyBuYW1lLCBhYm91dCB9KSxcclxuICAgIH0pLnRoZW4odGhpcy5fY2hlY2tSZXNwb25zZSk7XHJcbiAgfVxyXG4gIFxyXG4gIHNldFVzZXJBdmF0YXIoeyBhdmF0YXIgfSkge1xyXG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L3VzZXJzL21lL2F2YXRhcmAsIHtcclxuICAgICAgbWV0aG9kOiAnUEFUQ0gnLFxyXG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxyXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7IGF2YXRhciB9KSxcclxuICAgIH0pLnRoZW4odGhpcy5fY2hlY2tSZXNwb25zZSk7XHJcbiAgfVxyXG5cclxuICBhZGRDYXJkKHsgbmFtZSwgbGluayB9KSB7XHJcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fYmFzZVVybH0vY2FyZHNgLCB7XHJcbiAgICAgIG1ldGhvZDogJ1BPU1QnLFxyXG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxyXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7IG5hbWUsIGxpbmsgfSksXHJcbiAgICB9KS50aGVuKHRoaXMuX2NoZWNrUmVzcG9uc2UpO1xyXG4gIH1cclxuXHJcbiAgcmVtb3ZlQ2FyZCggX2lkICkge1xyXG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L2NhcmRzLyR7IF9pZCB9YCwge1xyXG4gICAgICBtZXRob2Q6ICdERUxFVEUnLFxyXG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxyXG4gICAgfSkudGhlbih0aGlzLl9jaGVja1Jlc3BvbnNlKTtcclxuICB9XHJcblxyXG4gIGFkZExpa2UoY2FyZElEKSB7XHJcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fYmFzZVVybH0vY2FyZHMvbGlrZXMvJHtjYXJkSUR9YCwge1xyXG4gICAgICBtZXRob2Q6ICdQVVQnLFxyXG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxyXG4gICAgfSkudGhlbih0aGlzLl9jaGVja1Jlc3BvbnNlKTtcclxuICB9XHJcblxyXG4gIHJlbW92ZUxpa2UoY2FyZElEKSB7XHJcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fYmFzZVVybH0vY2FyZHMvbGlrZXMvJHtjYXJkSUR9YCwge1xyXG4gICAgICBtZXRob2Q6ICdERUxFVEUnLFxyXG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxyXG4gICAgfSkudGhlbih0aGlzLl9jaGVja1Jlc3BvbnNlKTtcclxuICB9XHJcblxyXG5cclxuXHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IEFwaTsiLCJleHBvcnQgY29uc3QgcmVuZGVyTG9hZGluZyA9IChwb3B1cFNlbGVjdG9yLCBpc0xvYWRpbmcgPSBmYWxzZSkgPT4ge1xyXG4gICAgY29uc3QgYWN0aXZlQnV0dG9uID0gZG9jdW1lbnRcclxuICAgICAgLnF1ZXJ5U2VsZWN0b3IocG9wdXBTZWxlY3RvcilcclxuICAgICAgLnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfX3NhdmUtYnV0dG9uXCIpO1xyXG4gICAgaWYgKGlzTG9hZGluZykge1xyXG4gICAgICBhY3RpdmVCdXR0b24udGV4dENvbnRlbnQgPSBcIlNhdmluZy4uLlwiO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgYWN0aXZlQnV0dG9uLnRleHRDb250ZW50ID0gXCJTYXZlXCI7XHJcbiAgICB9XHJcbiAgfTsiLCJpbXBvcnQgXCIuL2luZGV4LmNzc1wiO1xyXG5cclxuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cclxuLyogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgSW1wb3J0IGNsYXNzZXMgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKi9cclxuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cclxuaW1wb3J0IEZvcm1WYWxpZGF0b3IgZnJvbSBcIi4uL2NvbXBvbmVudHMvRm9ybVZhbGlkYXRvci5qc1wiO1xyXG5pbXBvcnQgQ2FyZCBmcm9tIFwiLi4vY29tcG9uZW50cy9DYXJkLmpzXCI7XHJcbmltcG9ydCBTZWN0aW9uIGZyb20gXCIuLi9jb21wb25lbnRzL1NlY3Rpb24uanNcIjtcclxuaW1wb3J0IFBvcHVwV2l0aEltYWdlIGZyb20gXCIuLi9jb21wb25lbnRzL1BvcHVwV2l0aEltYWdlLmpzXCI7XHJcbmltcG9ydCBQb3B1cFdpdGhGb3JtIGZyb20gXCIuLi9jb21wb25lbnRzL1BvcHVwV2l0aEZvcm0uanNcIjtcclxuaW1wb3J0IFBvcHVwV2l0aENvbmZpcm1hdGlvbiBmcm9tIFwiLi4vY29tcG9uZW50cy9Qb3B1cFdpdGhDb25maXJtYXRpb24uanNcIjtcclxuaW1wb3J0IFVzZXJJbmZvIGZyb20gXCIuLi9jb21wb25lbnRzL1VzZXJJbmZvLmpzXCI7XHJcbmltcG9ydCB7IGZvcm1WYWxpZGF0aW9uU2V0dGluZ3MsIHNlbGVjdG9ycywgcG9wdXBFZGl0VXNlciwgcG9wdXBFZGl0QXZhdGFyLCBwb3B1cEFkZENhcmQsIHBvcHVwRGVsZXRlQ2FyZCB9IGZyb20gXCIuLi91dGlscy9jb25zdGFudHMuanNcIjtcclxuaW1wb3J0IEFwaSBmcm9tIFwiLi4vY29tcG9uZW50cy9BcGkuanNcIjtcclxuaW1wb3J0IHsgcmVuZGVyTG9hZGluZyB9IGZyb20gXCIuLi91dGlscy91dGlscy5qc1wiO1xyXG5cclxuXHJcbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXHJcbi8qICAgICAgICAgICAgICAgICAgICAgICBDcmVhdGUgaW5zdGFuY2VzIG9mIHRoZSBjbGFzc2VzICAgICAgICAgICAgICAgICAgICAgICovXHJcbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXHJcbmNvbnN0IHVzZXJJbmZvID0gbmV3IFVzZXJJbmZvKHtcclxuICBuYW1lU2VsZWN0b3I6IHBvcHVwRWRpdFVzZXIubmFtZVNlbGVjdG9yLFxyXG4gIGRlc2NyaXB0aW9uU2VsZWN0b3I6IHBvcHVwRWRpdFVzZXIuZGVzY3JpcHRpb25TZWxlY3RvcixcclxuICBhdmF0YXJTZWxlY3RvcjogcG9wdXBFZGl0QXZhdGFyLmF2YXRhclNlbGVjdG9yLFxyXG59KTtcclxuXHJcbmNvbnN0IGNhcmRQcmV2aWV3UG9wdXAgPSBuZXcgUG9wdXBXaXRoSW1hZ2Uoc2VsZWN0b3JzLnByZXZpZXdQb3B1cCk7XHJcbmNhcmRQcmV2aWV3UG9wdXAuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuXHJcbmNvbnN0IGFwaSA9IG5ldyBBcGkoe1xyXG4gIGJhc2VVcmw6ICdodHRwczovL2Fyb3VuZC5ub21vcmVwYXJ0aWVzLmNvL3YxL2dyb3VwLTEyJyxcclxuICBoZWFkZXJzOiB7XHJcbiAgICBhdXRob3JpemF0aW9uOiAnYWNjYTlkZDMtYTZhNC00NjI2LTg4ZTItNjA2MTk2MDJiZGY5JyxcclxuICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsXHJcbiAgfSxcclxufSk7XHJcblxyXG5cclxuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cclxuLyogICAgICAgICAgICAgIFdvcmtpbmcgb24gcHJvbWlzZSBhbGwgdG8gZ2V0IGNhcmRzIGFuZCB1c2VyIGluZm8gICAgICAgICAgICAgKi9cclxuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cclxuXHJcblByb21pc2UuYWxsKFthcGkuZ2V0VXNlckluZm8oKSwgYXBpLmdldEluaXRpYWxDYXJkcygpIF0pXHJcbiAgLnRoZW4oKFt1c2VyRGF0YSwgY2FyZHNdKSA9PiB7XHJcbiAgICBjb25zdCB7IG5hbWUsIGFib3V0IH0gPSB1c2VySW5mbztcclxuICAgIHVzZXJJZCA9IHVzZXJEYXRhLl9pZDtcclxuICAgIGFwaS5zZXRVc2VySW5mbyh7XHJcbiAgICAgIG5hbWU6IHVzZXJEYXRhLm5hbWUsXHJcbiAgICAgIGFib3V0OiB1c2VyRGF0YS5hYm91dCxcclxuICAgIH0pO1xyXG4gICAgLy8gdXNlckluZm8uc2V0VXNlckluZm8odXNlckRhdGEpO1xyXG4gICAgY2FyZExpc3QucmVuZGVySXRlbXMoY2FyZHMucmV2ZXJzZSgpKTtcclxuICAgIC8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXHJcbiAgICAvKiAgICAgICAgICAgICAgICAgICAgY29uc29sZSBsb2cgY2FyZHMgdG8gY2hlY2sgb3duZXIgZGF0YSAgICAgICAgICAgICAgICAgICAqL1xyXG4gICAgLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cclxuICAgIC8vIGNvbnNvbGUubG9nKHVzZXJEYXRhKTtcclxuICB9KVxyXG4gIC5jYXRjaCgoZXJyKSA9PiBjb25zb2xlLndhcm4oJyR7ZXJyfScpKTtcclxuXHJcbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXHJcbi8qICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFub3RoZXIgYXR0ZW1wdCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICovXHJcbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXHJcblxyXG5cclxubGV0IHVzZXJJZCA9IG51bGw7XHJcblxyXG5jb25zdCBjcmVhdGVDYXJkID0gKGRhdGEpID0+IHtcclxuICBjb25zdCBjYXJkID0gbmV3IENhcmQoXHJcbiAgICB7XHJcbiAgICAgIGN1cnJlbnRJZDogdXNlcklkLFxyXG4gICAgICBkYXRhLFxyXG4gICAgICBoYW5kbGVDYXJkQ2xpY2s6ICgpID0+IHtcclxuICAgICAgICBjYXJkUHJldmlld1BvcHVwLm9wZW4oZGF0YSlcclxuICAgICAgfSxcclxuICAgICAgaGFuZGxlRGVsZXRlQnV0dG9uOiAoY2FyZEVsZW1lbnQpID0+IHtcclxuICAgICAgICByZW1vdmVDYXJkUG9wdXAub3BlbigoKSA9PiB7XHJcbiAgICAgICAgICBhcGlcclxuICAgICAgICAgIC5yZW1vdmVDYXJkKGRhdGEuX2lkKVxyXG4gICAgICAgICAgLnRoZW4oKCkgPT4ge1xyXG4gICAgICAgICAgICBjYXJkRWxlbWVudC5yZW1vdmUoKTtcclxuICAgICAgICAgICAgcmVtb3ZlQ2FyZFBvcHVwLmNsb3NlKCk7XHJcbiAgICAgICAgICB9KVxyXG4gICAgICAgICAgLmNhdGNoKChlcnIpID0+IHtcclxuICAgICAgICAgICAgY29uc29sZS5sb2coYFRoZXJlIHdhcyBhbiBpc3N1ZSBkZWxldGluZyB0aGlzIGNhcmQ6ICR7ZXJyfWApO1xyXG4gICAgICAgICAgfSk7XHJcbiAgICAgIH0pO1xyXG4gICAgfSxcclxuXHJcbiAgICBoYW5kbGVMaWtlQnV0dG9uOiAoKSA9PiB7XHJcbiAgICAgIGlmKGNhcmQuaXNMaWtlZCgpKSB7XHJcbiAgICAgICAgYXBpXHJcbiAgICAgICAgLnJlbW92ZUxpa2UoZGF0YS5faWQpXHJcbiAgICAgICAgLnRoZW4oKHJlcykgPT4ge1xyXG4gICAgICAgICAgY29uc29sZS5sb2coJ3JlcycsIHJlcyk7XHJcbiAgICAgICAgICBjYXJkLnNldExpa2VzKHJlcy5saWtlcyk7XHJcbiAgICAgICAgfSlcclxuICAgICAgICAuY2F0Y2goKGVycikgPT4ge1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhlcnIpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIGFwaVxyXG4gICAgICAgIC5hZGRMaWtlKGRhdGEuX2lkKVxyXG4gICAgICAgIC50aGVuKChyZXMpID0+IHtcclxuICAgICAgICAgIGNvbnNvbGUubG9nKCdyZXMnLCByZXMpO1xyXG4gICAgICAgICAgY2FyZC5zZXRMaWtlcyhyZXMubGlrZXMpO1xyXG4gICAgICAgIH0pXHJcbiAgICAgICAgLmNhdGNoKChlcnIpID0+IHtcclxuICAgICAgICAgICAgY29uc29sZS5sb2coZXJyKTtcclxuICAgICAgICB9KTtcclxuICAgICAgfVxyXG5cclxuICAgIH1cclxuICAgIH0sXHJcbiAgICBzZWxlY3RvcnMuY2FyZFRlbXBsYXRlXHJcbiAgICApO1xyXG4gICAgY29uc29sZS5sb2coY2FyZCk7XHJcbiAgICByZXR1cm4gY2FyZDtcclxuICB9XHJcbiAgXHJcblxyXG5jb25zdCBjYXJkTGlzdCA9IG5ldyBTZWN0aW9uKHtcclxuICByZW5kZXJlcjogKGl0ZW0pID0+IHtcclxuICAgIGNvbnN0IG5ld0NhcmQgPSBjcmVhdGVDYXJkKGl0ZW0pO1xyXG4gICAgY29uc3QgY2FyZEVsZW1lbnQgPSBuZXdDYXJkLmdldFZpZXcoKTtcclxuICAgIGNhcmRMaXN0LmFkZEl0ZW0oY2FyZEVsZW1lbnQpO1xyXG4gIH0sXHJcbn0sXHJcbnNlbGVjdG9ycy5jYXJkU2VjdGlvblxyXG4pO1xyXG5cclxuXHJcbmNvbnN0IGVkaXRGb3JtID0gbmV3IFBvcHVwV2l0aEZvcm0oe1xyXG4gIHBvcHVwU2VsZWN0b3I6IHBvcHVwRWRpdFVzZXIuZWRpdE1vZGFsLFxyXG4gIGhhbmRsZUZvcm1TdWJtaXQ6IChkYXRhKSA9PiB7XHJcbiAgICByZW5kZXJMb2FkaW5nKHBvcHVwRWRpdFVzZXIuZWRpdE1vZGFsLCB0cnVlKTtcclxuICAgIGFwaVxyXG4gICAgICAuc2V0VXNlckluZm8oe1xyXG4gICAgICAgIG5hbWU6IGRhdGEubmFtZSxcclxuICAgICAgICBhYm91dDogZGF0YS5kZXNjcmlwdGlvbixcclxuICAgICAgfSlcclxuICAgICAgLnRoZW4oKGluZm8pID0+IHtcclxuICAgICAgICB1c2VySW5mby5zZXRVc2VySW5mbyh7XHJcbiAgICAgICAgICBuYW1lOiBpbmZvLm5hbWUsXHJcbiAgICAgICAgICBkZXNjcmlwdGlvbjogaW5mby5hYm91dCxcclxuICAgICAgICB9KTtcclxuICAgICAgICBlZGl0Rm9ybS5jbG9zZSgpO1xyXG4gICAgICB9KVxyXG4gICAgICAuY2F0Y2goKGVycikgPT5cclxuICAgICAgICBjb25zb2xlLndhcm4oYFVuYWJsZSB0byB1cGRhdGUgcHJvZmlsZSBpbmZvcm1hdGlvbjogJHtlcnJ9YClcclxuICAgICAgKVxyXG4gICAgICAuZmluYWxseSgoKSA9PiB7XHJcbiAgICAgICAgcmVuZGVyTG9hZGluZyhwb3B1cEVkaXRVc2VyLmVkaXRNb2RhbCk7XHJcbiAgICAgIH0pO1xyXG4gIH0sXHJcbn0pO1xyXG5cclxuY29uc3QgYXZhdGFyRWRpdCA9IG5ldyBQb3B1cFdpdGhGb3JtKHtcclxuICBwb3B1cFNlbGVjdG9yOiBwb3B1cEVkaXRBdmF0YXIuc2VsZWN0b3IsXHJcbiAgaGFuZGxlRm9ybVN1Ym1pdDogKGRhdGEpID0+IHtcclxuICAgIHJlbmRlckxvYWRpbmcocG9wdXBFZGl0QXZhdGFyLnNlbGVjdG9yLCB0cnVlKTtcclxuICAgIGFwaVxyXG4gICAgICAuc2V0VXNlckF2YXRhcih7IFxyXG4gICAgICAgIGF2YXRhcjogZGF0YS5hdmF0YXIgfSlcclxuICAgICAgLnRoZW4oKGluZm8pID0+IHtcclxuICAgICAgICB1c2VySW5mby5zZXRBdmF0YXIoeyB1c2VyQXZhdGFyOiBpbmZvLmF2YXRhciB9KTtcclxuICAgICAgICBhdmF0YXJFZGl0LmNsb3NlKCk7XHJcbiAgICAgIH0pXHJcbiAgICAgIC5jYXRjaCgoZXJyKSA9PiBjb25zb2xlLndhcm4oYFVuYWJsZSBjaGFuZ2UgdGhlIHVzZXIgYXZhdGFyOiAke2Vycn1gKSlcclxuICAgICAgLmZpbmFsbHkoKCkgPT4ge1xyXG4gICAgICAgIHJlbmRlckxvYWRpbmcocG9wdXBFZGl0QXZhdGFyLnNlbGVjdG9yKTtcclxuICAgICAgfSk7XHJcbiAgfSxcclxufSk7XHJcblxyXG5cclxuY29uc3QgYWRkRm9ybSA9IG5ldyBQb3B1cFdpdGhGb3JtKHtcclxuICBwb3B1cFNlbGVjdG9yOiBwb3B1cEFkZENhcmQuYWRkTW9kYWwsXHJcbiAgaGFuZGxlRm9ybVN1Ym1pdDogKGRhdGEpID0+IHtcclxuICAgIHJlbmRlckxvYWRpbmcocG9wdXBBZGRDYXJkLmFkZE1vZGFsLCB0cnVlKTtcclxuICAgIGFwaVxyXG4gICAgICAuYWRkQ2FyZChkYXRhKVxyXG4gICAgICAudGhlbigoZGF0YSkgPT4ge1xyXG4gICAgICAgIGNvbnN0IG5ld0NhcmQgPSAoY3JlYXRlQ2FyZChkYXRhKSk7XHJcbiAgICAgICAgY2FyZExpc3QuYWRkSXRlbShuZXdDYXJkLmdldFZpZXcoKSk7XHJcbiAgICAgICAgYWRkRm9ybS5jbG9zZSgpO1xyXG4gICAgICB9KVxyXG4gICAgICAuY2F0Y2goKGVycikgPT4gY29uc29sZS53YXJuKGBVbmFibGUgdG8gYWRkIGEgY2FyZDogJHtlcnJ9YCkpXHJcbiAgICAgIC5maW5hbGx5KCgpID0+IHtcclxuICAgICAgICByZW5kZXJMb2FkaW5nKHBvcHVwQWRkQ2FyZC5hZGRNb2RhbCk7XHJcbiAgICAgIH0pO1xyXG4gIH0sXHJcbn0pO1xyXG5cclxuY29uc3QgcmVtb3ZlQ2FyZFBvcHVwID0gbmV3IFBvcHVwV2l0aENvbmZpcm1hdGlvbih7XHJcbiAgcG9wdXBTZWxlY3RvcjogcG9wdXBEZWxldGVDYXJkLmRlbGV0ZUNhcmRTZWxlY3RvcixcclxuICBoYW5kbGVEZWxldGVDYXJkOiAoKSA9PiB7fSxcclxufSlcclxuXHJcbiBcclxuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cclxuLyogICAgICAgICAgICAgICAgICAgICAgIFByZWZpbGwgZnVuY3Rpb24gYW5kIGNvbnN0YW50cyAgICAgICAgICAgICAgICAgICAgICAgKi9cclxuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cclxuLy8gZnVuY3Rpb24gcHJlZmlsbEVkaXRGb3JtKG1vZGFsV2luZG93KSB7XHJcbi8vICAgY29uc3QgeyBuYW1lLCBkZXNjcmlwdGlvbiB9ID0gdXNlckluZm8uZ2V0VXNlckluZm8oKTtcclxuLy8gICBuYW1lSW5wdXQudmFsdWUgPSBuYW1lO1xyXG4vLyAgIGRlc2NyaXB0aW9uSW5wdXQudmFsdWUgPSBkZXNjcmlwdGlvbjtcclxuLy8gfVxyXG5cclxuY29uc3QgbmFtZUlucHV0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNvd25lci1uYW1lXCIpO1xyXG5jb25zdCBkZXNjcmlwdGlvbklucHV0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNvd25lci1kZXNjcmlwdGlvblwiKTtcclxuXHJcblxyXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xyXG4vKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBFdmVudCBsaXN0ZW5lcnMgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAqL1xyXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xyXG5lZGl0Rm9ybS5zZXRFdmVudExpc3RlbmVycygpO1xyXG5hdmF0YXJFZGl0LnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcbmFkZEZvcm0uc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxucmVtb3ZlQ2FyZFBvcHVwLnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcblxyXG5wb3B1cEVkaXRVc2VyLmVkaXRCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcclxuICBjb25zdCBjdXJyZW50VXNlckluZm8gPSB1c2VySW5mby5nZXRVc2VySW5mbygpO1xyXG4gIG5hbWVJbnB1dC52YWx1ZSA9IGN1cnJlbnRVc2VySW5mby5uYW1lO1xyXG4gIGRlc2NyaXB0aW9uSW5wdXQudmFsdWUgPSBjdXJyZW50VXNlckluZm8uZGVzY3JpcHRpb247XHJcbiAgZWRpdEZvcm0ub3BlbihjdXJyZW50VXNlckluZm8pO1xyXG59KTtcclxuXHJcbnBvcHVwRWRpdEF2YXRhci5idXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcclxuICBhdmF0YXJFZGl0Lm9wZW4oKTtcclxufSk7XHJcblxyXG5wb3B1cEFkZENhcmQuYWRkQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XHJcbiAgYWRkRm9ybS5vcGVuKCk7XHJcbn0pO1xyXG5cclxuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cclxuLyogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBWYWxpZGF0aW9uICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKi9cclxuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cclxuXHJcbmNvbnN0IGVkaXRGb3JtRWwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfdHlwZV9lZGl0Jyk7XHJcbmNvbnN0IGF2YXRhckVkaXRFbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF90eXBlX2F2YXRhcicpO1xyXG5jb25zdCBhZGRGb3JtRWwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfdHlwZV9hZGQnKTtcclxuXHJcbmNvbnN0IGVkaXRGb3JtVmFsaWRhdG9yID0gbmV3IEZvcm1WYWxpZGF0b3IoZm9ybVZhbGlkYXRpb25TZXR0aW5ncywgZWRpdEZvcm1FbCk7XHJcbmVkaXRGb3JtVmFsaWRhdG9yLmVuYWJsZVZhbGlkYXRpb24oKTtcclxuXHJcbmNvbnN0IGF2YXRhckVkaXRWYWxpZGF0b3IgPSBuZXcgRm9ybVZhbGlkYXRvcihmb3JtVmFsaWRhdGlvblNldHRpbmdzLCBhdmF0YXJFZGl0RWwpO1xyXG5hdmF0YXJFZGl0VmFsaWRhdG9yLmVuYWJsZVZhbGlkYXRpb24oKTtcclxuXHJcbmNvbnN0IGFkZEZvcm1WYWxpZGF0b3IgPSBuZXcgRm9ybVZhbGlkYXRvcihmb3JtVmFsaWRhdGlvblNldHRpbmdzLCBhZGRGb3JtRWwpO1xyXG5hZGRGb3JtVmFsaWRhdG9yLmVuYWJsZVZhbGlkYXRpb24oKTtcclxuIl0sIm5hbWVzIjpbIkZvcm1WYWxpZGF0b3IiLCJzZXR0aW5ncyIsImZvcm1FbGVtZW50IiwidGhpcyIsIl9zZXR0aW5ncyIsIl9mb3JtRWxlbWVudCIsIl9pbnB1dFNlbGVjdG9yIiwiaW5wdXRTZWxlY3RvciIsIl9zdWJtaXRCdXR0b25TZWxlY3RvciIsInN1Ym1pdEJ1dHRvblNlbGVjdG9yIiwiX2luYWN0aXZlQnV0dG9uQ2xhc3MiLCJpbmFjdGl2ZUJ1dHRvbkNsYXNzIiwiX2lucHV0RXJyb3JDbGFzcyIsImlucHV0RXJyb3JDbGFzcyIsIl9lcnJvckNsYXNzIiwiZXJyb3JDbGFzcyIsIl9pbnB1dExpc3QiLCJxdWVyeVNlbGVjdG9yQWxsIiwiX2J1dHRvbkVsIiwicXVlcnlTZWxlY3RvciIsImlucHV0RWwiLCJlcnJvckVsIiwiaWQiLCJjbGFzc0xpc3QiLCJhZGQiLCJ0ZXh0Q29udGVudCIsInZhbGlkYXRpb25NZXNzYWdlIiwicmVtb3ZlIiwidmFsaWRpdHkiLCJ2YWxpZCIsIl9oaWRlSW5wdXRFcnJvciIsIl9zaG93SW5wdXRFcnJvciIsImV2ZXJ5IiwiZGlzYWJsZWQiLCJ0b2dnbGVCdXR0b25TdGF0ZSIsImZvckVhY2giLCJhZGRFdmVudExpc3RlbmVyIiwiZSIsIl9jaGVja0lucHV0VmFsaWRpdHkiLCJldnQiLCJwcmV2ZW50RGVmYXVsdCIsIl9zZXR1cEV2ZW50TGlzdGVuZXJzIiwiaW5wdXRFbGVtZW50IiwiQ2FyZCIsImNhcmRTZWxlY3RvciIsImRhdGEiLCJoYW5kbGVDYXJkQ2xpY2siLCJoYW5kbGVEZWxldGVCdXR0b24iLCJoYW5kbGVMaWtlQnV0dG9uIiwiY3VycmVudElkIiwiX2RhdGEiLCJfbmFtZSIsIm5hbWUiLCJfbGluayIsImxpbmsiLCJfY2FyZElEIiwiX2lkIiwiX293bmVySWQiLCJvd25lciIsIl9oYW5kbGVDYXJkQ2xpY2siLCJfaGFuZGxlRGVsZXRlQnV0dG9uIiwiX2hhbmRsZUxpa2VCdXR0b24iLCJfY3VycmVudElkIiwiX2NhcmRTZWxlY3RvciIsIl9saWtlQnV0dG9uIiwiX2RlbGV0ZUJ1dHRvbiIsIl9lbGVtZW50IiwiX2ltYWdlRWxlbWVudCIsImxpa2VzIiwic29tZSIsImxpa2UiLCJfdXBkYXRlTGlrZXNWaWV3IiwiaXNMaWtlZCIsIl9saWtlQ291bnRlciIsImxlbmd0aCIsImNhcmRFbGVtZW50IiwiZG9jdW1lbnQiLCJjb250ZW50IiwiZmlyc3RFbGVtZW50Q2hpbGQiLCJjbG9uZU5vZGUiLCJfZ2V0VGVtcGxhdGUiLCJzcmMiLCJhbHQiLCJTZWN0aW9uIiwiY29udGFpbmVyU2VsZWN0b3IiLCJyZW5kZXJlciIsIl9yZW5kZXJlciIsIl9jb250YWluZXIiLCJlbGVtZW50IiwicHJlcGVuZCIsIml0ZW1zIiwiaXRlbSIsIlBvcHVwIiwicG9wdXBTZWxlY3RvciIsImtleSIsImNsb3NlIiwidGFyZ2V0IiwiX3BvcHVwRWxlbWVudCIsIl9oYW5kbGVFc2NVcCIsImJpbmQiLCJfbW91c2VDbGljayIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJQb3B1cFdpdGhJbWFnZSIsIl9wcmV2aWV3SW1hZ2UiLCJfcHJldmlld0ltYWdlVGl0bGUiLCJQb3B1cFdpdGhGb3JtIiwiaGFuZGxlRm9ybVN1Ym1pdCIsIl9mb3JtIiwiX3N1Ym1pdEJ1dHRvbiIsIl9oYW5kbGVGb3JtU3VibWl0IiwiaW5wdXRWYWx1ZSIsImlucHV0IiwidmFsdWUiLCJfZ2V0SW5wdXRWYWx1ZXMiLCJyZXNldCIsIlBvcHVwV2l0aENvbmZpcm1hdGlvbiIsIl9oYW5kbGVEZWxldGVDYXJkIiwiZGVsZXRlQ2FyZCIsIlVzZXJJbmZvIiwibmFtZVNlbGVjdG9yIiwiZGVzY3JpcHRpb25TZWxlY3RvciIsImF2YXRhclNlbGVjdG9yIiwiZGVzY3JpcHRpb24iLCJfZGVzY3JpcHRpb24iLCJhdmF0YXIiLCJfYXZhdGFyIiwidXNlckF2YXRhciIsImZvcm1WYWxpZGF0aW9uU2V0dGluZ3MiLCJwb3B1cEVkaXRVc2VyIiwiZWRpdE1vZGFsIiwiZWRpdEJ1dHRvbiIsImNsb3NlQnV0dG9uIiwicG9wdXBFZGl0QXZhdGFyIiwic2VsZWN0b3IiLCJidXR0b24iLCJmb3JtIiwiYXZhdGFySW5wdXQiLCJwb3B1cEFkZENhcmQiLCJhZGRNb2RhbCIsImFkZEJ1dHRvbiIsIkFwaSIsImJhc2VVcmwiLCJoZWFkZXJzIiwiX2Jhc2VVcmwiLCJfaGVhZGVycyIsInJlcyIsIm9rIiwianNvbiIsIlByb21pc2UiLCJyZWplY3QiLCJzdGF0dXMiLCJhbGwiLCJnZXRDYXJkTGlzdCIsImdldFVzZXJJbmZvIiwiZmV0Y2giLCJ0aGVuIiwiX2NoZWNrUmVzcG9uc2UiLCJhYm91dCIsIm1ldGhvZCIsImJvZHkiLCJKU09OIiwic3RyaW5naWZ5IiwiY2FyZElEIiwicmVuZGVyTG9hZGluZyIsImlzTG9hZGluZyIsImFjdGl2ZUJ1dHRvbiIsInVzZXJJbmZvIiwiY2FyZFByZXZpZXdQb3B1cCIsInNldEV2ZW50TGlzdGVuZXJzIiwiYXBpIiwiYXV0aG9yaXphdGlvbiIsImdldEluaXRpYWxDYXJkcyIsInVzZXJEYXRhIiwiY2FyZHMiLCJ1c2VySWQiLCJzZXRVc2VySW5mbyIsImNhcmRMaXN0IiwicmVuZGVySXRlbXMiLCJyZXZlcnNlIiwiY2F0Y2giLCJlcnIiLCJjb25zb2xlIiwid2FybiIsImNyZWF0ZUNhcmQiLCJjYXJkIiwib3BlbiIsInJlbW92ZUNhcmRQb3B1cCIsInJlbW92ZUNhcmQiLCJsb2ciLCJyZW1vdmVMaWtlIiwic2V0TGlrZXMiLCJhZGRMaWtlIiwiZ2V0VmlldyIsImFkZEl0ZW0iLCJlZGl0Rm9ybSIsImluZm8iLCJmaW5hbGx5IiwiYXZhdGFyRWRpdCIsInNldFVzZXJBdmF0YXIiLCJzZXRBdmF0YXIiLCJhZGRGb3JtIiwiYWRkQ2FyZCIsIm5ld0NhcmQiLCJoYW5kbGVEZWxldGVDYXJkIiwibmFtZUlucHV0IiwiZGVzY3JpcHRpb25JbnB1dCIsImN1cnJlbnRVc2VySW5mbyIsImVkaXRGb3JtRWwiLCJhdmF0YXJFZGl0RWwiLCJhZGRGb3JtRWwiLCJlbmFibGVWYWxpZGF0aW9uIl0sInNvdXJjZVJvb3QiOiIifQ==