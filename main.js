!function(){"use strict";function e(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function t(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var n=function(){function n(t,r){var o;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,n),this._settings=t,this._formElement=r,this._inputSelector=t.inputSelector,this._submitButtonSelector=t.submitButtonSelector,this._inactiveButtonClass=t.inactiveButtonClass,this._inputErrorClass=t.inputErrorClass,this._errorClass=t.errorClass,this._inputList=function(t){if(Array.isArray(t))return e(t)}(o=r.querySelectorAll(t.inputSelector))||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(o)||function(t,n){if(t){if("string"==typeof t)return e(t,n);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?e(t,n):void 0}}(o)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(),this._buttonEl=r.querySelector(t.submitButtonSelector)}var r,o;return r=n,(o=[{key:"_showInputError",value:function(e){var t=this._formElement.querySelector("#".concat(e.id,"-error"));e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}},{key:"_hideInputError",value:function(e){var t=this._formElement.querySelector("#".concat(e.id,"-error"));e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}},{key:"_checkInputValidity",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}},{key:"toggleButtonState",value:function(){this._inputList.every((function(e){return e.validity.valid}))?(this._buttonEl.classList.remove(this._inactiveButtonClass),this._buttonEl.disabled=!1):(this._buttonEl.classList.add(this._inactiveButtonClass),this._buttonEl.disabled=!0)}},{key:"_setupEventListeners",value:function(){var e=this;this.toggleButtonState(),this._inputList.forEach((function(t){t.addEventListener("input",(function(n){e._checkInputValidity(t),e.toggleButtonState()}))}))}},{key:"enableValidation",value:function(){this._formElement.addEventListener("submit",(function(e){e.preventDefault()})),this._setupEventListeners()}},{key:"resetValidation",value:function(){var e=this;this.toggleButtonState(),this._inputList.forEach((function(t){e._hideInputError(t)}))}}])&&t(r.prototype,o),Object.defineProperty(r,"prototype",{writable:!1}),n}();function r(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var o=function(){function e(t,n){var r=t.data,o=t.handleCardClick,i=t.handleDeleteButton,a=t.handleLikeButton,u=t.currentId;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._data=r,this._name=r.name,this._link=r.link,this._cardID=r._id,this._ownerId=r.owner._id,this._handleCardClick=o,this._handleDeleteButton=i,this._handleLikeButton=a,this._currentId=u,this._cardSelector=n}var t,n;return t=e,(n=[{key:"_setupEventListeners",value:function(){var e=this;this._likeButton.addEventListener("click",(function(){return e._handleLikeButton()})),this._deleteButton.addEventListener("click",(function(){return e._handleDeleteButton(e._element)})),this._imageElement.addEventListener("click",(function(){return e._handleCardClick({name:e._name,link:e._link})}))}},{key:"isLiked",value:function(){var e=this;return this._data.likes.some((function(t){return t._id===e._currentId}))}},{key:"setLikes",value:function(e){this._data.likes=e,this._updateLikesView()}},{key:"_updateLikesView",value:function(){this.isLiked()?this._likeButton.classList.add("card__like-button_active"):this._likeButton.classList.remove("card__like-button_active"),this._likeCounter.textContent=this._data.likes.length}},{key:"_getTemplate",value:function(){var e=document.querySelector(this._cardSelector).content.firstElementChild.cloneNode(!0);return this._deleteButton=e.querySelector(".delete-button"),e}},{key:"getView",value:function(){var e=this;return this._element=this._getTemplate(),this._imageElement=this._element.querySelector(".card__image"),this._element.querySelector(".card__title").textContent=this._name,this._likeButton=this._element.querySelector(".card__like-button"),this._likeCounter=this._element.querySelector(".card__like-counter"),this._deleteButton=this._element.querySelector(".card__delete-button"),this._imageElement.src=this._link,this._imageElement.alt="Photo of ".concat(this._link),this._currentId!==this._ownerId&&this._deleteButton.classList.add("delete-button_hidden"),this._data.likes.some((function(t){return t._id===e._currentId}))?this._likeButton.classList.add("card__like-button_active"):this._likeButton.classList.remove("card__like-button_active"),this._likeCounter.textContent=this._data.likes.length,this._setupEventListeners(),this._element}}])&&r(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function i(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var a=function(){function e(t,n){var r=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderer=r,this._container=document.querySelector(n)}var t,n;return t=e,(n=[{key:"addItem",value:function(e){this._container.prepend(e)}},{key:"renderItems",value:function(e){var t=this;e.forEach((function(e){t._renderer(e)}))}}])&&i(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function u(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function c(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var l=function(){function e(t){var n=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),c(this,"_handleEscUp",(function(e){"Escape"===e.key&&n.close()})),c(this,"_mouseClick",(function(e){e.target===n._popupElement&&n.close()})),this._popupElement=document.querySelector(t),this._handleEscUp=this._handleEscUp.bind(this)}var t,n;return t=e,(n=[{key:"setEventListeners",value:function(){var e=this;this._popupElement.querySelector(".popup__close-button").addEventListener("click",(function(){e.close()}))}},{key:"open",value:function(){this._popupElement.classList.add("popup_opened"),document.addEventListener("keyup",this._handleEscUp),document.addEventListener("mousedown",this._mouseClick)}},{key:"close",value:function(){this._popupElement.classList.remove("popup_opened"),document.removeEventListener("keyup",this._handleEscUp),document.removeEventListener("mousedown",this._mouseClick)}}])&&u(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function s(e){return s="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},s(e)}function p(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function f(){return f="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=d(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},f.apply(this,arguments)}function d(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=_(e)););return e}function h(e,t){return h=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},h(e,t)}function y(e,t){if(t&&("object"===s(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function _(e){return _=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},_(e)}var v=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&h(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=_(r);if(o){var n=_(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return y(this,e)});function a(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,e))._previewImage=t._popupElement.querySelector(".popup__image"),t._previewImageTitle=t._popupElement.querySelector(".popup__caption"),t}return t=a,(n=[{key:"open",value:function(e){this._previewImage.src=e.link,this._previewImage.alt="Photo of ".concat(e.link),this._previewImageTitle.textContent=e.name,f(_(a.prototype),"open",this).call(this)}}])&&p(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(l);function m(e){return m="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},m(e)}function b(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function k(){return k="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=g(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},k.apply(this,arguments)}function g(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=E(e)););return e}function w(e,t){return w=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},w(e,t)}function S(e,t){if(t&&("object"===m(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function E(e){return E=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},E(e)}var O=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&w(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=E(r);if(o){var n=E(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return S(this,e)});function a(e){var t,n=e.popupSelector,r=e.handleFormSubmit;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,n))._form=t._popupElement.querySelector(".popup__form"),t._inputList=t._popupElement.querySelectorAll(".popup__input"),t._submitButton=t._popupElement.querySelector(".popup__save-button"),t._handleFormSubmit=r,t}return t=a,(n=[{key:"_getInputValues",value:function(){var e={};return this._inputList.forEach((function(t){e[t.name]=t.value})),e}},{key:"setEventListeners",value:function(){var e=this;k(E(a.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",(function(t){t.preventDefault(),e._handleFormSubmit(e._getInputValues())}))}},{key:"close",value:function(){k(E(a.prototype),"close",this).call(this),this._form.reset()}}])&&b(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(l);function L(e){return L="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},L(e)}function C(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function j(){return j="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=P(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},j.apply(this,arguments)}function P(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=q(e)););return e}function I(e,t){return I=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},I(e,t)}function B(e,t){if(t&&("object"===L(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function q(e){return q=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},q(e)}var R=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&I(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=q(r);if(o){var n=q(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return B(this,e)});function a(e){var t,n=e.popupSelector;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,n))._handleDeleteCard=t._handleDeleteCard,t}return t=a,(n=[{key:"open",value:function(e){j(q(a.prototype),"open",this).call(this),this.deleteCard=e}},{key:"setEventListeners",value:function(){var e=this;j(q(a.prototype),"setEventListeners",this).call(this),this._popupElement.addEventListener("submit",(function(t){t.preventDefault(),e.deleteCard()}))}}])&&C(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(l);function U(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function T(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var A=function(){function e(t){var n=this,r=t.nameSelector,o=t.descriptionSelector,i=t.avatarSelector;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),T(this,"getUserInfo",(function(){return{name:n._name.textContent,description:n._description.textContent,avatar:n._avatar.src}})),T(this,"setUserInfo",(function(e){var t=e.name,r=e.about;n._name.textContent=t,n._description.textContent=r})),this._name=document.querySelector(r),this._description=document.querySelector(o),this._avatar=document.querySelector(i)}var t,n;return t=e,(n=[{key:"getUserId",value:function(){return{_id:this._id}}},{key:"setAvatar",value:function(e){var t=e.userAvatar;this._avatar.src=t}}])&&U(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}(),D={inputSelector:".popup__input",submitButtonSelector:".popup__save-button",inactiveButtonClass:"popup__save-button_type_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__error_visible"},x=(document.querySelector(".popup_type_add"),{editModal:".popup_type_edit",nameSelector:".profile__name",descriptionSelector:".profile__description",editButton:document.querySelector(".profile__edit-button"),closeButton:document.querySelector(".popup__close-button")}),V={selector:".popup_type_avatar",avatarSelector:".profile__image",button:document.querySelector(".avatar__edit-button"),form:document.querySelector(".popup_type_avatar"),avatarInput:document.querySelector("#avatar-input")},M={addModal:".popup_type_add",addButton:document.querySelector(".profile__add-button"),closeButton:document.querySelector(".popup__close-button")};function F(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}document.querySelector(".popup__close-button");var N=function(){function e(t){var n=t.baseUrl,r=t.headers;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._baseUrl=n,this._headers=r}var t,n;return t=e,(n=[{key:"_checkResponse",value:function(e){return e.ok?e.json():Promise.reject("Error ".concat(e.status))}},{key:"getAppInfo",value:function(){return Promise.all([this.getCardList(),this.getUserInfo()])}},{key:"getInitialCards",value:function(){return fetch("".concat(this._baseUrl,"/cards"),{headers:this._headers}).then(this._checkResponse)}},{key:"getUserInfo",value:function(){return fetch("".concat(this._baseUrl,"/users/me"),{headers:this._headers}).then(this._checkResponse)}},{key:"setUserInfo",value:function(e){var t=e.name,n=e.about;return fetch("".concat(this._baseUrl,"/users/me"),{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t,about:n})}).then(this._checkResponse)}},{key:"setUserAvatar",value:function(e){var t=e.avatar;return fetch("".concat(this._baseUrl,"/users/me/avatar"),{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:t})}).then(this._checkResponse)}},{key:"addCard",value:function(e){var t=e.name,n=e.link;return fetch("".concat(this._baseUrl,"/cards"),{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:n})}).then(this._checkResponse)}},{key:"removeCard",value:function(e){return fetch("".concat(this._baseUrl,"/cards/").concat(e),{method:"DELETE",headers:this._headers}).then(this._checkResponse)}},{key:"addLike",value:function(e){return fetch("".concat(this._baseUrl,"/cards/likes/").concat(e),{method:"PUT",headers:this._headers}).then(this._checkResponse)}},{key:"removeLike",value:function(e){return fetch("".concat(this._baseUrl,"/cards/likes/").concat(e),{method:"DELETE",headers:this._headers}).then(this._checkResponse)}}])&&F(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}(),J=function(e){var t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=document.querySelector(e).querySelector(".popup__save-button");n.textContent=t?"Saving...":"Save"};function $(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var H=new A({nameSelector:x.nameSelector,descriptionSelector:x.descriptionSelector,avatarSelector:V.avatarSelector}),z=new v(".popup_type_preview");z.setEventListeners();var G=new N({baseUrl:"https://around.nomoreparties.co/v1/group-12",headers:{authorization:"acca9dd3-a6a4-4626-88e2-60619602bdf9","Content-Type":"application/json"}});Promise.all([G.getUserInfo(),G.getInitialCards()]).then((function(e){var t,n,r=(n=2,function(e){if(Array.isArray(e))return e}(t=e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,i=[],a=!0,u=!1;try{for(n=n.call(e);!(a=(r=n.next()).done)&&(i.push(r.value),!t||i.length!==t);a=!0);}catch(e){u=!0,o=e}finally{try{a||null==n.return||n.return()}finally{if(u)throw o}}return i}}(t,n)||function(e,t){if(e){if("string"==typeof e)return $(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?$(e,t):void 0}}(t,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=r[0],i=r[1];K=o._id,H.setUserInfo(o),console.log("userdata",o),W.renderItems(i.reverse())})).catch((function(e){return console.warn("${err}")}));var K=null,Q=function(e){var t=new o({currentId:K,data:e,handleCardClick:function(){z.open(e)},handleDeleteButton:function(t){ee.open((function(){G.removeCard(e._id).then((function(){t.remove(),ee.close()})).catch((function(e){console.log("There was an issue deleting this card: ".concat(e))}))}))},handleLikeButton:function(){t.isLiked()?G.removeLike(e._id).then((function(e){t.setLikes(e.likes)})).catch((function(e){console.log(e)})):G.addLike(e._id).then((function(e){console.log("res",e),t.setLikes(e.likes)})).catch((function(e){console.log(e)}))}},"#cardTemplate");return t},W=new a({renderer:function(e){var t=Q(e).getView();W.addItem(t)}},"#placesList"),X=new O({popupSelector:x.editModal,handleFormSubmit:function(e){J(x.editModal,!0),G.setUserInfo({name:e.name,about:e.description}).then((function(e){H.setUserInfo(e),console.log("info",e),X.close()})).catch((function(e){return console.warn("Unable to update profile information: ".concat(e))})).finally((function(){J(x.editModal)}))}}),Y=new O({popupSelector:V.selector,handleFormSubmit:function(e){J(V.selector,!0),G.setUserAvatar({avatar:e.avatar}).then((function(e){H.setAvatar({userAvatar:e.avatar}),Y.close()})).catch((function(e){return console.warn("Unable change the user avatar: ".concat(e))})).finally((function(){J(V.selector)}))}}),Z=new O({popupSelector:M.addModal,handleFormSubmit:function(e){J(M.addModal,!0),G.addCard(e).then((function(e){var t=Q(e);W.addItem(t.getView()),Z.close()})).catch((function(e){return console.warn("Unable to add a card: ".concat(e))})).finally((function(){J(M.addModal)}))}}),ee=new R({popupSelector:".popup_type_delete",handleDeleteCard:function(){}}),te=document.querySelector("#owner-name"),ne=document.querySelector("#owner-description");X.setEventListeners(),Y.setEventListeners(),Z.setEventListeners(),ee.setEventListeners(),x.editButton.addEventListener("click",(function(){var e=H.getUserInfo();te.value=e.name,ne.value=e.description,X.open(e)})),V.button.addEventListener("click",(function(){Y.open()})),M.addButton.addEventListener("click",(function(){Z.open()}));var re=document.querySelector(".popup_type_edit"),oe=document.querySelector(".popup_type_avatar"),ie=document.querySelector(".popup_type_add");new n(D,re).enableValidation(),new n(D,oe).enableValidation(),new n(D,ie).enableValidation()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QVE1SixHQUNSK0csTUFBSyxTQUFDL0csR0FDTCxJQUFNNkosRUFBV2xCLEVBQVczSSxHQUM1QnFJLEVBQVNlLFFBQVFTLEVBQVFWLFdBQ3pCUSxFQUFRekcsV0FFVHNGLE9BQU0sU0FBQ0MsR0FBRCxPQUFTTixRQUFRTyxLQUFSLGdDQUFzQ0QsT0FDckRjLFNBQVEsV0FDUGpDLEVBQWN6QixFQUFhQyxnQkFLN0JnRCxHQUFrQixJQUFJeEUsRUFBc0IsQ0FDaER0QixjSC9Kb0IscUJHZ0twQjhHLGlCQUFrQixlQWFkQyxHQUFZaEksU0FBU3pELGNBQWMsZUFDbkMwTCxHQUFtQmpJLFNBQVN6RCxjQUFjLHNCQU1oRCtLLEVBQVMxQixvQkFDVDZCLEVBQVc3QixvQkFDWGdDLEVBQVFoQyxvQkFDUm1CLEdBQWdCbkIsb0JBRWhCdkMsRUFBY0UsV0FBVy9GLGlCQUFpQixTQUFTLFdBQ2pELElBQU0wSyxFQUFrQnhDLEVBQVNaLGNBQ2pDa0QsR0FBVTVGLE1BQVE4RixFQUFnQjFKLEtBQ2xDeUosR0FBaUI3RixNQUFROEYsRUFBZ0JwRixZQUN6Q3dFLEVBQVNSLEtBQUtvQixNQUdoQnpFLEVBQWdCRSxPQUFPbkcsaUJBQWlCLFNBQVMsV0FDL0NpSyxFQUFXWCxVQUdiaEQsRUFBYUUsVUFBVXhHLGlCQUFpQixTQUFTLFdBQy9Db0ssRUFBUWQsVUFPVixJQUFNcUIsR0FBYW5JLFNBQVN6RCxjQUFjLG9CQUNwQzZMLEdBQWVwSSxTQUFTekQsY0FBYyxzQkFDdEM4TCxHQUFZckksU0FBU3pELGNBQWMsbUJBRWYsSUFBSW5CLEVBQWNnSSxFQUF3QitFLElBQ2xERyxtQkFFVSxJQUFJbE4sRUFBY2dJLEVBQXdCZ0YsSUFDbERFLG1CQUVLLElBQUlsTixFQUFjZ0ksRUFBd0JpRixJQUNsREMsbUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWJfcHJvamVjdF80Ly4vc3JjL2NvbXBvbmVudHMvRm9ybVZhbGlkYXRvci5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF80Ly4vc3JjL2NvbXBvbmVudHMvQ2FyZC5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF80Ly4vc3JjL2NvbXBvbmVudHMvU2VjdGlvbi5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF80Ly4vc3JjL2NvbXBvbmVudHMvUG9wdXAuanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNC8uL3NyYy9jb21wb25lbnRzL1BvcHVwV2l0aEltYWdlLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzQvLi9zcmMvY29tcG9uZW50cy9Qb3B1cFdpdGhGb3JtLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzQvLi9zcmMvY29tcG9uZW50cy9Qb3B1cFdpdGhDb25maXJtYXRpb24uanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNC8uL3NyYy9jb21wb25lbnRzL1VzZXJJbmZvLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzQvLi9zcmMvdXRpbHMvY29uc3RhbnRzLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzQvLi9zcmMvY29tcG9uZW50cy9BcGkuanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNC8uL3NyYy91dGlscy91dGlscy5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF80Ly4vc3JjL3BhZ2VzL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImNsYXNzIEZvcm1WYWxpZGF0b3Ige1xyXG4gICAgY29uc3RydWN0b3Ioc2V0dGluZ3MsIGZvcm1FbGVtZW50KSB7XHJcbiAgICAgICAgdGhpcy5fc2V0dGluZ3MgPSBzZXR0aW5ncztcclxuICAgICAgICB0aGlzLl9mb3JtRWxlbWVudCA9IGZvcm1FbGVtZW50O1xyXG4gICAgICAgIHRoaXMuX2lucHV0U2VsZWN0b3IgPSBzZXR0aW5ncy5pbnB1dFNlbGVjdG9yO1xyXG4gICAgICAgIHRoaXMuX3N1Ym1pdEJ1dHRvblNlbGVjdG9yID0gc2V0dGluZ3Muc3VibWl0QnV0dG9uU2VsZWN0b3I7XHJcbiAgICAgICAgdGhpcy5faW5hY3RpdmVCdXR0b25DbGFzcyA9IHNldHRpbmdzLmluYWN0aXZlQnV0dG9uQ2xhc3M7XHJcbiAgICAgICAgdGhpcy5faW5wdXRFcnJvckNsYXNzID0gc2V0dGluZ3MuaW5wdXRFcnJvckNsYXNzO1xyXG4gICAgICAgIHRoaXMuX2Vycm9yQ2xhc3MgPSBzZXR0aW5ncy5lcnJvckNsYXNzO1xyXG4gICAgICAgIHRoaXMuX2lucHV0TGlzdCA9IFsuLi5mb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yQWxsKHNldHRpbmdzLmlucHV0U2VsZWN0b3IpXTtcclxuICAgICAgICB0aGlzLl9idXR0b25FbCA9IGZvcm1FbGVtZW50LnF1ZXJ5U2VsZWN0b3Ioc2V0dGluZ3Muc3VibWl0QnV0dG9uU2VsZWN0b3IpO1xyXG4gICAgfVxyXG5cclxuICAgIF9zaG93SW5wdXRFcnJvcihpbnB1dEVsKSB7XHJcbiAgICAgICAgY29uc3QgZXJyb3JFbCA9IHRoaXMuX2Zvcm1FbGVtZW50LnF1ZXJ5U2VsZWN0b3IoYCMke2lucHV0RWwuaWR9LWVycm9yYCk7XHJcbiAgICAgICAgaW5wdXRFbC5jbGFzc0xpc3QuYWRkKHRoaXMuX2lucHV0RXJyb3JDbGFzcyk7XHJcbiAgICAgICAgZXJyb3JFbC50ZXh0Q29udGVudCA9IGlucHV0RWwudmFsaWRhdGlvbk1lc3NhZ2U7XHJcbiAgICAgICAgZXJyb3JFbC5jbGFzc0xpc3QuYWRkKHRoaXMuX2Vycm9yQ2xhc3MpO1xyXG4gICAgfVxyXG5cclxuICAgIF9oaWRlSW5wdXRFcnJvcihpbnB1dEVsKSB7XHJcbiAgICAgICAgY29uc3QgZXJyb3JFbCA9IHRoaXMuX2Zvcm1FbGVtZW50LnF1ZXJ5U2VsZWN0b3IoYCMke2lucHV0RWwuaWR9LWVycm9yYCk7XHJcbiAgICAgICAgaW5wdXRFbC5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX2lucHV0RXJyb3JDbGFzcyk7XHJcbiAgICAgICAgZXJyb3JFbC50ZXh0Q29udGVudCA9ICcnO1xyXG4gICAgICAgIGVycm9yRWwuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9lcnJvckNsYXNzKTtcclxuICAgIH1cclxuXHJcbiAgICBfY2hlY2tJbnB1dFZhbGlkaXR5KGlucHV0RWwpIHtcclxuICAgICAgICBpZiAoIWlucHV0RWwudmFsaWRpdHkudmFsaWQpIHtcclxuICAgICAgICAgICAgdGhpcy5fc2hvd0lucHV0RXJyb3IoaW5wdXRFbCk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgdGhpcy5faGlkZUlucHV0RXJyb3IoaW5wdXRFbCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHRvZ2dsZUJ1dHRvblN0YXRlKCkge1xyXG4gICAgICAgIGNvbnN0IGFsbFZhbGlkID0gdGhpcy5faW5wdXRMaXN0LmV2ZXJ5KChpbnB1dEVsKSA9PiBpbnB1dEVsLnZhbGlkaXR5LnZhbGlkKTtcclxuICAgICAgICBpZiAoYWxsVmFsaWQpIHtcclxuICAgICAgICAgICAgdGhpcy5fYnV0dG9uRWwuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9pbmFjdGl2ZUJ1dHRvbkNsYXNzKTtcclxuICAgICAgICAgICAgdGhpcy5fYnV0dG9uRWwuZGlzYWJsZWQgPSBmYWxzZTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICB0aGlzLl9idXR0b25FbC5jbGFzc0xpc3QuYWRkKHRoaXMuX2luYWN0aXZlQnV0dG9uQ2xhc3MpO1xyXG4gICAgICAgICAgICB0aGlzLl9idXR0b25FbC5kaXNhYmxlZCA9IHRydWU7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIF9zZXR1cEV2ZW50TGlzdGVuZXJzKCkge1xyXG4gICAgICAgIHRoaXMudG9nZ2xlQnV0dG9uU3RhdGUoKTtcclxuICAgICAgICB0aGlzLl9pbnB1dExpc3QuZm9yRWFjaCgoaW5wdXRFbCkgPT4ge1xyXG4gICAgICAgICAgICBpbnB1dEVsLmFkZEV2ZW50TGlzdGVuZXIoXCJpbnB1dFwiLCAoZSkgPT4ge1xyXG5cclxuICAgICAgICAgICAgICAgIHRoaXMuX2NoZWNrSW5wdXRWYWxpZGl0eShpbnB1dEVsKTtcclxuICAgICAgICAgICAgICAgIHRoaXMudG9nZ2xlQnV0dG9uU3RhdGUoKTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgZW5hYmxlVmFsaWRhdGlvbigpIHtcclxuICAgICAgICB0aGlzLl9mb3JtRWxlbWVudC5hZGRFdmVudExpc3RlbmVyKFwic3VibWl0XCIsIChldnQpID0+IHtcclxuICAgICAgICAgICAgZXZ0LnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIHRoaXMuX3NldHVwRXZlbnRMaXN0ZW5lcnMoKTtcclxuICAgIH1cclxuXHJcbiAgICByZXNldFZhbGlkYXRpb24oKSB7XHJcbiAgICAgICAgdGhpcy50b2dnbGVCdXR0b25TdGF0ZSgpO1xyXG5cclxuICAgICAgICB0aGlzLl9pbnB1dExpc3QuZm9yRWFjaCgoaW5wdXRFbGVtZW50KSA9PiB7XHJcbiAgICAgICAgICAgIHRoaXMuX2hpZGVJbnB1dEVycm9yKGlucHV0RWxlbWVudCk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbn1cclxuXHJcblxyXG5leHBvcnQgZGVmYXVsdCBGb3JtVmFsaWRhdG9yOyIsImNsYXNzIENhcmQge1xyXG4gICAgY29uc3RydWN0b3IoeyBkYXRhLCBoYW5kbGVDYXJkQ2xpY2ssIGhhbmRsZURlbGV0ZUJ1dHRvbiwgaGFuZGxlTGlrZUJ1dHRvbiwgY3VycmVudElkIH0sIGNhcmRTZWxlY3Rvcikge1xyXG4gICAgICAgIHRoaXMuX2RhdGEgPSBkYXRhO1xyXG4gICAgICAgIHRoaXMuX25hbWUgPSBkYXRhLm5hbWU7XHJcbiAgICAgICAgdGhpcy5fbGluayA9IGRhdGEubGluaztcclxuICAgICAgICB0aGlzLl9jYXJkSUQgPSBkYXRhLl9pZDtcclxuICAgICAgICB0aGlzLl9vd25lcklkID0gZGF0YS5vd25lci5faWQ7XHJcbiAgICAgICAgdGhpcy5faGFuZGxlQ2FyZENsaWNrID0gaGFuZGxlQ2FyZENsaWNrO1xyXG4gICAgICAgIHRoaXMuX2hhbmRsZURlbGV0ZUJ1dHRvbiA9IGhhbmRsZURlbGV0ZUJ1dHRvbjtcclxuICAgICAgICB0aGlzLl9oYW5kbGVMaWtlQnV0dG9uID0gaGFuZGxlTGlrZUJ1dHRvbjtcclxuICAgICAgICB0aGlzLl9jdXJyZW50SWQgPSBjdXJyZW50SWQ7XHJcbiAgICAgICAgdGhpcy5fY2FyZFNlbGVjdG9yID0gY2FyZFNlbGVjdG9yO1xyXG4gICAgfVxyXG5cclxuICAgICAgICBfc2V0dXBFdmVudExpc3RlbmVycygpIHtcclxuICAgICAgICAgICAgdGhpcy5fbGlrZUJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHRoaXMuX2hhbmRsZUxpa2VCdXR0b24oKSk7XHJcbiAgICAgICAgICAgIHRoaXMuX2RlbGV0ZUJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHRoaXMuX2hhbmRsZURlbGV0ZUJ1dHRvbih0aGlzLl9lbGVtZW50KSk7XHJcbiAgICAgICAgICAgIHRoaXMuX2ltYWdlRWxlbWVudC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHRoaXMuX2hhbmRsZUNhcmRDbGljayh7IG5hbWU6IHRoaXMuX25hbWUsIGxpbms6IHRoaXMuX2xpbmsgfSkpO1xyXG4gICAgfVxyXG5cclxuICAgIGlzTGlrZWQoKSB7XHJcbiAgICAgICByZXR1cm4gdGhpcy5fZGF0YS5saWtlcy5zb21lKChsaWtlKSA9PiB7XHJcbiAgICAgICAgICAgIGlmIChsaWtlLl9pZCA9PT0gdGhpcy5fY3VycmVudElkKSB7XHJcbiAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgc2V0TGlrZXMobGlrZXMpIHtcclxuICAgICAgICB0aGlzLl9kYXRhLmxpa2VzID0gbGlrZXM7XHJcbiAgICAgICAgdGhpcy5fdXBkYXRlTGlrZXNWaWV3KCk7XHJcbiAgICB9XHJcblxyXG5cclxuICAgIF91cGRhdGVMaWtlc1ZpZXcoKSB7XHJcbiAgICAgICAgaWYodGhpcy5pc0xpa2VkKCkpe1xyXG4gICAgICAgICAgICB0aGlzLl9saWtlQnV0dG9uLmNsYXNzTGlzdC5hZGQoJ2NhcmRfX2xpa2UtYnV0dG9uX2FjdGl2ZScpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHRoaXMuX2xpa2VCdXR0b24uY2xhc3NMaXN0LnJlbW92ZSgnY2FyZF9fbGlrZS1idXR0b25fYWN0aXZlJyk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMuX2xpa2VDb3VudGVyLnRleHRDb250ZW50ID0gdGhpcy5fZGF0YS5saWtlcy5sZW5ndGg7XHJcblxyXG4gICAgXHJcbiAgICAgIH1cclxuXHJcblxyXG4gICAgX2dldFRlbXBsYXRlKCkge1xyXG4gICAgICAgIGNvbnN0IGNhcmRFbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0aGlzLl9jYXJkU2VsZWN0b3IpLmNvbnRlbnQuZmlyc3RFbGVtZW50Q2hpbGQuY2xvbmVOb2RlKHRydWUpO1xyXG4gICAgICAgIHRoaXMuX2RlbGV0ZUJ1dHRvbiA9IGNhcmRFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXHJcbiAgICAgICAgICAgICcuZGVsZXRlLWJ1dHRvbicsXHJcbiAgICAgICAgICApO1xyXG4gICAgICAgIHJldHVybiBjYXJkRWxlbWVudDtcclxuICAgIH1cclxuXHJcbiAgICBnZXRWaWV3KCkge1xyXG4gICAgICAgIHRoaXMuX2VsZW1lbnQgPSB0aGlzLl9nZXRUZW1wbGF0ZSgpO1xyXG4gICAgICAgIHRoaXMuX2ltYWdlRWxlbWVudCA9IHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5jYXJkX19pbWFnZVwiKTtcclxuICAgICAgICB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZF9fdGl0bGVcIikudGV4dENvbnRlbnQgPSB0aGlzLl9uYW1lO1xyXG4gICAgICAgIHRoaXMuX2xpa2VCdXR0b24gPSB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZF9fbGlrZS1idXR0b25cIik7XHJcbiAgICAgICAgdGhpcy5fbGlrZUNvdW50ZXIgPSB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jYXJkX19saWtlLWNvdW50ZXInKTtcclxuICAgICAgICB0aGlzLl9kZWxldGVCdXR0b24gPSB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZF9fZGVsZXRlLWJ1dHRvblwiKTtcclxuICAgICAgICB0aGlzLl9pbWFnZUVsZW1lbnQuc3JjID0gdGhpcy5fbGluaztcclxuICAgICAgICB0aGlzLl9pbWFnZUVsZW1lbnQuYWx0ID0gYFBob3RvIG9mICR7dGhpcy5fbGlua31gO1xyXG4gICAgICAgIGlmICh0aGlzLl9jdXJyZW50SWQgIT09IHRoaXMuX293bmVySWQpIHtcclxuICAgICAgICAgICAgdGhpcy5fZGVsZXRlQnV0dG9uLmNsYXNzTGlzdC5hZGQoJ2RlbGV0ZS1idXR0b25faGlkZGVuJyk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGNvbnN0IGlzTGlrZWQgPSB0aGlzLl9kYXRhLmxpa2VzLnNvbWUoKGxpa2UpID0+IHtcclxuICAgICAgICAgICAgaWYgKGxpa2UuX2lkID09PSB0aGlzLl9jdXJyZW50SWQpIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgaWYgKGlzTGlrZWQpIHtcclxuICAgICAgICAgICAgdGhpcy5fbGlrZUJ1dHRvbi5jbGFzc0xpc3QuYWRkKCdjYXJkX19saWtlLWJ1dHRvbl9hY3RpdmUnKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICB0aGlzLl9saWtlQnV0dG9uLmNsYXNzTGlzdC5yZW1vdmUoJ2NhcmRfX2xpa2UtYnV0dG9uX2FjdGl2ZScpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgdGhpcy5fbGlrZUNvdW50ZXIudGV4dENvbnRlbnQgPSB0aGlzLl9kYXRhLmxpa2VzLmxlbmd0aDtcclxuXHJcbiAgICAgICAgdGhpcy5fc2V0dXBFdmVudExpc3RlbmVycygpO1xyXG4gICAgICAgIFxyXG4gICAgICAgIHJldHVybiB0aGlzLl9lbGVtZW50O1xyXG4gICAgfVxyXG5cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgQ2FyZDsiLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBTZWN0aW9uIHtcclxuICAgIGNvbnN0cnVjdG9yKHsgcmVuZGVyZXIgfSwgY29udGFpbmVyU2VsZWN0b3IpIHtcclxuICAgICAgdGhpcy5fcmVuZGVyZXIgPSByZW5kZXJlcjtcclxuICAgICAgdGhpcy5fY29udGFpbmVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcihjb250YWluZXJTZWxlY3Rvcik7ICAgICAgXHJcbiAgICB9XHJcblxyXG4gICAgYWRkSXRlbShlbGVtZW50KSB7XHJcbiAgICAgIHRoaXMuX2NvbnRhaW5lci5wcmVwZW5kKGVsZW1lbnQpO1xyXG4gICAgICB9XHJcblxyXG4gICAgcmVuZGVySXRlbXMoaXRlbXMpIHtcclxuICAgICAgaXRlbXMuZm9yRWFjaCgoaXRlbSkgPT4ge1xyXG4gICAgICAgICAgdGhpcy5fcmVuZGVyZXIoaXRlbSk7XHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG59IiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXAge1xyXG4gICAgY29uc3RydWN0b3IocG9wdXBTZWxlY3Rvcikge1xyXG4gICAgICAgIHRoaXMuX3BvcHVwRWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IocG9wdXBTZWxlY3Rvcik7XHJcbiAgICAgICAgdGhpcy5faGFuZGxlRXNjVXAgPSB0aGlzLl9oYW5kbGVFc2NVcC5iaW5kKHRoaXMpO1xyXG4gICAgfVxyXG5cclxuICAgIHNldEV2ZW50TGlzdGVuZXJzKCkge1xyXG4gICAgICAgIGNvbnN0IGNsb3NlQnV0dG9uID0gdGhpcy5fcG9wdXBFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9fY2xvc2UtYnV0dG9uJyk7XHJcbiAgICAgICAgY2xvc2VCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XHJcbiAgICAgICAgICB0aGlzLmNsb3NlKCk7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgIH0gICAgXHJcblxyXG4gICAgb3BlbigpIHtcclxuICAgICAgICB0aGlzLl9wb3B1cEVsZW1lbnQuY2xhc3NMaXN0LmFkZCgncG9wdXBfb3BlbmVkJyk7XHJcbiAgICAgICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigna2V5dXAnLCB0aGlzLl9oYW5kbGVFc2NVcCk7XHJcbiAgICAgICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignbW91c2Vkb3duJywgdGhpcy5fbW91c2VDbGljayk7XHJcbiAgICB9XHJcblxyXG4gICAgY2xvc2UoKSB7XHJcbiAgICAgICAgdGhpcy5fcG9wdXBFbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUoJ3BvcHVwX29wZW5lZCcpO1xyXG4gICAgICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2tleXVwJywgdGhpcy5faGFuZGxlRXNjVXApO1xyXG4gICAgICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ21vdXNlZG93bicsIHRoaXMuX21vdXNlQ2xpY2spO1xyXG4gICAgfVxyXG5cclxuICAgIF9oYW5kbGVFc2NVcCA9IChldnQpID0+IHtcclxuICAgICAgICBpZiAoZXZ0LmtleSA9PT0gXCJFc2NhcGVcIikge1xyXG4gICAgICAgICAgICB0aGlzLmNsb3NlKCk7XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuXHJcbiAgICBfbW91c2VDbGljayA9IChldnQpID0+IHtcclxuICAgICAgICBpZiAoZXZ0LnRhcmdldCA9PT0gdGhpcy5fcG9wdXBFbGVtZW50KSB7XHJcbiAgICAgICAgICB0aGlzLmNsb3NlKCk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9OyAgICBcclxufSIsImltcG9ydCBQb3B1cCBmcm9tICcuL1BvcHVwJztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwV2l0aEltYWdlIGV4dGVuZHMgUG9wdXAge1xyXG4gIGNvbnN0cnVjdG9yKHBvcHVwU2VsZWN0b3IpIHtcclxuICAgIHN1cGVyKHBvcHVwU2VsZWN0b3IpO1xyXG4gICAgdGhpcy5fcHJldmlld0ltYWdlID0gdGhpcy5fcG9wdXBFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXHJcbiAgICAgICcucG9wdXBfX2ltYWdlJyxcclxuICAgICk7XHJcbiAgICB0aGlzLl9wcmV2aWV3SW1hZ2VUaXRsZSA9IHRoaXMuX3BvcHVwRWxlbWVudC5xdWVyeVNlbGVjdG9yKFxyXG4gICAgICAnLnBvcHVwX19jYXB0aW9uJyxcclxuICAgICk7XHJcbiAgfVxyXG5cclxuICBvcGVuKGRhdGEpIHtcclxuICAgIHRoaXMuX3ByZXZpZXdJbWFnZS5zcmMgPSBkYXRhLmxpbms7XHJcbiAgICB0aGlzLl9wcmV2aWV3SW1hZ2UuYWx0ID0gYFBob3RvIG9mICR7ZGF0YS5saW5rfWA7XHJcbiAgICB0aGlzLl9wcmV2aWV3SW1hZ2VUaXRsZS50ZXh0Q29udGVudCA9IGRhdGEubmFtZTtcclxuICAgIHN1cGVyLm9wZW4oKTtcclxuICB9XHJcbn0iLCJpbXBvcnQgUG9wdXAgZnJvbSAnLi9Qb3B1cCc7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cFdpdGhGb3JtIGV4dGVuZHMgUG9wdXAge1xyXG4gIGNvbnN0cnVjdG9yKHsgcG9wdXBTZWxlY3RvciwgaGFuZGxlRm9ybVN1Ym1pdCB9KSB7XHJcbiAgICBzdXBlcihwb3B1cFNlbGVjdG9yKTtcclxuICAgIHRoaXMuX2Zvcm0gPSB0aGlzLl9wb3B1cEVsZW1lbnQucXVlcnlTZWxlY3RvcignLnBvcHVwX19mb3JtJyk7XHJcbiAgICB0aGlzLl9pbnB1dExpc3QgPSB0aGlzLl9wb3B1cEVsZW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLnBvcHVwX19pbnB1dCcpO1xyXG4gICAgdGhpcy5fc3VibWl0QnV0dG9uID0gdGhpcy5fcG9wdXBFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9fc2F2ZS1idXR0b24nKTtcclxuICAgIHRoaXMuX2hhbmRsZUZvcm1TdWJtaXQgPSBoYW5kbGVGb3JtU3VibWl0O1xyXG4gIH1cclxuXHJcbiAgX2dldElucHV0VmFsdWVzKCkge1xyXG4gICAgY29uc3QgaW5wdXRWYWx1ZSA9IHt9O1xyXG4gICAgdGhpcy5faW5wdXRMaXN0LmZvckVhY2goKGlucHV0KSA9PiB7XHJcbiAgICAgIGlucHV0VmFsdWVbaW5wdXQubmFtZV0gPSBpbnB1dC52YWx1ZTtcclxuICAgIH0pO1xyXG4gICAgcmV0dXJuIGlucHV0VmFsdWU7XHJcbiAgfVxyXG4gIFxyXG4gIHNldEV2ZW50TGlzdGVuZXJzKCkge1xyXG4gICAgc3VwZXIuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuICAgIHRoaXMuX2Zvcm0uYWRkRXZlbnRMaXN0ZW5lcignc3VibWl0JywgKGV2dCkgPT4ge1xyXG4gICAgICBldnQucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgdGhpcy5faGFuZGxlRm9ybVN1Ym1pdCh0aGlzLl9nZXRJbnB1dFZhbHVlcygpKTtcclxuICB9KVxyXG4gfVxyXG5cclxuICBjbG9zZSgpIHtcclxuICAgIHN1cGVyLmNsb3NlKCk7XHJcbiAgICB0aGlzLl9mb3JtLnJlc2V0KCk7XHJcbiAgfVxyXG59IiwiaW1wb3J0IFBvcHVwIGZyb20gJy4vUG9wdXAnO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXBXaXRoQ29uZmlybWF0aW9uIGV4dGVuZHMgUG9wdXAge1xyXG4gIGNvbnN0cnVjdG9yKHtwb3B1cFNlbGVjdG9yIH0pIHtcclxuICAgIHN1cGVyKHBvcHVwU2VsZWN0b3IpO1xyXG4gICAgdGhpcy5faGFuZGxlRGVsZXRlQ2FyZCA9IHRoaXMuX2hhbmRsZURlbGV0ZUNhcmQ7XHJcbiAgfVxyXG5cclxuICBvcGVuKGRlbGV0ZUNhcmQpIHtcclxuICAgIHN1cGVyLm9wZW4oKTtcclxuICAgIHRoaXMuZGVsZXRlQ2FyZCA9IGRlbGV0ZUNhcmQ7XHJcbiAgfVxyXG5cclxuICBzZXRFdmVudExpc3RlbmVycygpIHtcclxuICAgIHN1cGVyLnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcbiAgICBcclxuICAgIHRoaXMuX3BvcHVwRWxlbWVudC5hZGRFdmVudExpc3RlbmVyKFwic3VibWl0XCIsIChldnQpID0+IHtcclxuICAgICAgZXZ0LnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgIHRoaXMuZGVsZXRlQ2FyZCgpO1xyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICAvLyBvcGVuKGNhcmRJRCwgZWxlbWVudCkge1xyXG4gIC8vICAgdGhpcy5fY2FyZElEID0gY2FyZElEO1xyXG4gIC8vICAgdGhpcy5fZWxlbWVudCA9IGVsZW1lbnQ7XHJcbiAgLy8gICBzdXBlci5vcGVuKCk7XHJcbiAgLy8gfVxyXG59IiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgVXNlckluZm8ge1xyXG4gICAgY29uc3RydWN0b3IoeyBuYW1lU2VsZWN0b3IsIGRlc2NyaXB0aW9uU2VsZWN0b3IsIGF2YXRhclNlbGVjdG9yIH0pIHtcclxuICAgICAgICB0aGlzLl9uYW1lID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihuYW1lU2VsZWN0b3IpO1xyXG4gICAgICAgIHRoaXMuX2Rlc2NyaXB0aW9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihkZXNjcmlwdGlvblNlbGVjdG9yKTtcclxuICAgICAgICB0aGlzLl9hdmF0YXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGF2YXRhclNlbGVjdG9yKTtcclxuICAgIH1cclxuXHJcbiAgICBnZXRVc2VySW5mbyA9ICgpID0+IHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICBuYW1lOiB0aGlzLl9uYW1lLnRleHRDb250ZW50LFxyXG4gICAgICAgICAgICBkZXNjcmlwdGlvbjogdGhpcy5fZGVzY3JpcHRpb24udGV4dENvbnRlbnQsXHJcbiAgICAgICAgICAgIGF2YXRhcjogdGhpcy5fYXZhdGFyLnNyYyxcclxuICAgICAgICB9O1xyXG4gICAgfVxyXG5cclxuICAgIGdldFVzZXJJZCAoKSB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgX2lkOiB0aGlzLl9pZCxcclxuICAgICAgfTtcclxuICAgIH1cclxuXHJcbiAgICBzZXRVc2VySW5mbyA9ICh7IG5hbWUsIGFib3V0IH0pICA9PiB7XHJcbiAgICAgICAgdGhpcy5fbmFtZS50ZXh0Q29udGVudCA9IG5hbWU7XHJcbiAgICAgICAgdGhpcy5fZGVzY3JpcHRpb24udGV4dENvbnRlbnQgPSBhYm91dDtcclxuICAgIH1cclxuXHJcbiAgICBzZXRBdmF0YXIoeyB1c2VyQXZhdGFyIH0pIHtcclxuICAgICAgICB0aGlzLl9hdmF0YXIuc3JjID0gdXNlckF2YXRhcjtcclxuICAgIH1cclxufSIsImV4cG9ydCBjb25zdCBmb3JtVmFsaWRhdGlvblNldHRpbmdzID0ge1xyXG4gICAgaW5wdXRTZWxlY3RvcjogXCIucG9wdXBfX2lucHV0XCIsXHJcbiAgICBzdWJtaXRCdXR0b25TZWxlY3RvcjogXCIucG9wdXBfX3NhdmUtYnV0dG9uXCIsXHJcbiAgICBpbmFjdGl2ZUJ1dHRvbkNsYXNzOiBcInBvcHVwX19zYXZlLWJ1dHRvbl90eXBlX2Rpc2FibGVkXCIsXHJcbiAgICBpbnB1dEVycm9yQ2xhc3M6IFwicG9wdXBfX2lucHV0X3R5cGVfZXJyb3JcIixcclxuICAgIGVycm9yQ2xhc3M6IFwicG9wdXBfX2Vycm9yX3Zpc2libGVcIixcclxuICB9O1xyXG5cclxuICBleHBvcnQgY29uc3Qgc2VsZWN0b3JzID0ge1xyXG4gICAgICBjYXJkU2VjdGlvbjogJyNwbGFjZXNMaXN0JyxcclxuICAgICAgY2FyZFRlbXBsYXRlOiAnI2NhcmRUZW1wbGF0ZScsXHJcbiAgICAgIHByZXZpZXdQb3B1cDogJy5wb3B1cF90eXBlX3ByZXZpZXcnLFxyXG4gICAgICBhZGRNb2RhbDogZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wb3B1cF90eXBlX2FkZFwiKSxcclxuICB9O1xyXG5cclxuICBleHBvcnQgY29uc3QgcG9wdXBFZGl0VXNlciA9IHtcclxuICAgIGVkaXRNb2RhbDogXCIucG9wdXBfdHlwZV9lZGl0XCIsXHJcbiAgICBuYW1lU2VsZWN0b3I6IFwiLnByb2ZpbGVfX25hbWVcIixcclxuICAgIGRlc2NyaXB0aW9uU2VsZWN0b3I6IFwiLnByb2ZpbGVfX2Rlc2NyaXB0aW9uXCIsXHJcbiAgICBlZGl0QnV0dG9uOiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnByb2ZpbGVfX2VkaXQtYnV0dG9uXCIpLFxyXG4gICAgY2xvc2VCdXR0b246IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfX2Nsb3NlLWJ1dHRvblwiKSxcclxuICB9XHJcblxyXG4gIGV4cG9ydCBjb25zdCBwb3B1cEVkaXRBdmF0YXIgPSB7XHJcbiAgICBzZWxlY3RvcjogJy5wb3B1cF90eXBlX2F2YXRhcicsXHJcbiAgICBhdmF0YXJTZWxlY3RvcjogJy5wcm9maWxlX19pbWFnZScsXHJcbiAgICBidXR0b246IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5hdmF0YXJfX2VkaXQtYnV0dG9uJyksXHJcbiAgICBmb3JtOiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfdHlwZV9hdmF0YXInKSxcclxuICAgIGF2YXRhcklucHV0OiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjYXZhdGFyLWlucHV0JyksXHJcbiAgfTsgIFxyXG5cclxuICBleHBvcnQgY29uc3QgcG9wdXBBZGRDYXJkID0ge1xyXG4gICAgYWRkTW9kYWw6IFwiLnBvcHVwX3R5cGVfYWRkXCIsXHJcbiAgICBhZGRCdXR0b246IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wcm9maWxlX19hZGQtYnV0dG9uJyksXHJcbiAgICBjbG9zZUJ1dHRvbjogZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnBvcHVwX19jbG9zZS1idXR0b24nKSxcclxuICB9XHJcbiAgXHJcbiAgZXhwb3J0IGNvbnN0IHBvcHVwRGVsZXRlQ2FyZCA9IHtcclxuICBkZWxldGVDYXJkU2VsZWN0b3I6IFwiLnBvcHVwX3R5cGVfZGVsZXRlXCIsXHJcbiAgZGVsZXRlQ2FyZEJ1dHRvbjogXCIuZGVsZXRlLWJ1dHRvblwiLFxyXG4gIGNsb3NlQnV0dG9uOiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX2Nsb3NlLWJ1dHRvbicpLFxyXG4gfVxyXG4gIiwiY2xhc3MgQXBpIHtcclxuICBjb25zdHJ1Y3Rvcih7IGJhc2VVcmwsIGhlYWRlcnMgfSkge1xyXG4gICAgdGhpcy5fYmFzZVVybCA9IGJhc2VVcmw7XHJcbiAgICB0aGlzLl9oZWFkZXJzID0gaGVhZGVycztcclxuICB9XHJcbiAgXHJcbiAgX2NoZWNrUmVzcG9uc2UocmVzKSB7XHJcbiAgICBpZiAocmVzLm9rKSB7XHJcbiAgICAgIHJldHVybiByZXMuanNvbigpO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGBFcnJvciAke3Jlcy5zdGF0dXN9YCk7XHJcbiAgfVxyXG5cclxuICBnZXRBcHBJbmZvKCkge1xyXG4gICAgcmV0dXJuIFByb21pc2UuYWxsKFt0aGlzLmdldENhcmRMaXN0KCksIHRoaXMuZ2V0VXNlckluZm8oKV0pO1xyXG4gIH1cclxuXHJcbiAgZ2V0SW5pdGlhbENhcmRzKCkge1xyXG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L2NhcmRzYCwge1xyXG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxyXG4gICAgfSkudGhlbih0aGlzLl9jaGVja1Jlc3BvbnNlKTtcclxuICB9XHJcblxyXG4gIGdldFVzZXJJbmZvKCkge1xyXG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L3VzZXJzL21lYCwge1xyXG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxyXG4gICAgfSkudGhlbih0aGlzLl9jaGVja1Jlc3BvbnNlKTtcclxuICB9XHJcblxyXG4gIHNldFVzZXJJbmZvKHsgbmFtZSwgYWJvdXQgfSkge1xyXG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L3VzZXJzL21lYCwge1xyXG4gICAgICBtZXRob2Q6ICdQQVRDSCcsXHJcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXHJcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHsgbmFtZSwgYWJvdXQgfSksXHJcbiAgICB9KS50aGVuKHRoaXMuX2NoZWNrUmVzcG9uc2UpO1xyXG4gIH1cclxuICBcclxuICBzZXRVc2VyQXZhdGFyKHsgYXZhdGFyIH0pIHtcclxuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVXJsfS91c2Vycy9tZS9hdmF0YXJgLCB7XHJcbiAgICAgIG1ldGhvZDogJ1BBVENIJyxcclxuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcclxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoeyBhdmF0YXIgfSksXHJcbiAgICB9KS50aGVuKHRoaXMuX2NoZWNrUmVzcG9uc2UpO1xyXG4gIH1cclxuXHJcbiAgYWRkQ2FyZCh7IG5hbWUsIGxpbmsgfSkge1xyXG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L2NhcmRzYCwge1xyXG4gICAgICBtZXRob2Q6ICdQT1NUJyxcclxuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcclxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoeyBuYW1lLCBsaW5rIH0pLFxyXG4gICAgfSkudGhlbih0aGlzLl9jaGVja1Jlc3BvbnNlKTtcclxuICB9XHJcblxyXG4gIHJlbW92ZUNhcmQoIF9pZCApIHtcclxuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVXJsfS9jYXJkcy8keyBfaWQgfWAsIHtcclxuICAgICAgbWV0aG9kOiAnREVMRVRFJyxcclxuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcclxuICAgIH0pLnRoZW4odGhpcy5fY2hlY2tSZXNwb25zZSk7XHJcbiAgfVxyXG5cclxuICBhZGRMaWtlKGNhcmRJRCkge1xyXG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L2NhcmRzL2xpa2VzLyR7Y2FyZElEfWAsIHtcclxuICAgICAgbWV0aG9kOiAnUFVUJyxcclxuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcclxuICAgIH0pLnRoZW4odGhpcy5fY2hlY2tSZXNwb25zZSk7XHJcbiAgfVxyXG5cclxuICByZW1vdmVMaWtlKGNhcmRJRCkge1xyXG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L2NhcmRzL2xpa2VzLyR7Y2FyZElEfWAsIHtcclxuICAgICAgbWV0aG9kOiAnREVMRVRFJyxcclxuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcclxuICAgIH0pLnRoZW4odGhpcy5fY2hlY2tSZXNwb25zZSk7XHJcbiAgfVxyXG5cclxuXHJcblxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBBcGk7IiwiZXhwb3J0IGNvbnN0IHJlbmRlckxvYWRpbmcgPSAocG9wdXBTZWxlY3RvciwgaXNMb2FkaW5nID0gZmFsc2UpID0+IHtcclxuICAgIGNvbnN0IGFjdGl2ZUJ1dHRvbiA9IGRvY3VtZW50XHJcbiAgICAgIC5xdWVyeVNlbGVjdG9yKHBvcHVwU2VsZWN0b3IpXHJcbiAgICAgIC5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwX19zYXZlLWJ1dHRvblwiKTtcclxuICAgIGlmIChpc0xvYWRpbmcpIHtcclxuICAgICAgYWN0aXZlQnV0dG9uLnRleHRDb250ZW50ID0gXCJTYXZpbmcuLi5cIjtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIGFjdGl2ZUJ1dHRvbi50ZXh0Q29udGVudCA9IFwiU2F2ZVwiO1xyXG4gICAgfVxyXG4gIH07IiwiaW1wb3J0IFwiLi9pbmRleC5jc3NcIjtcclxuXHJcbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXHJcbi8qICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEltcG9ydCBjbGFzc2VzICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICovXHJcbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXHJcbmltcG9ydCBGb3JtVmFsaWRhdG9yIGZyb20gXCIuLi9jb21wb25lbnRzL0Zvcm1WYWxpZGF0b3IuanNcIjtcclxuaW1wb3J0IENhcmQgZnJvbSBcIi4uL2NvbXBvbmVudHMvQ2FyZC5qc1wiO1xyXG5pbXBvcnQgU2VjdGlvbiBmcm9tIFwiLi4vY29tcG9uZW50cy9TZWN0aW9uLmpzXCI7XHJcbmltcG9ydCBQb3B1cFdpdGhJbWFnZSBmcm9tIFwiLi4vY29tcG9uZW50cy9Qb3B1cFdpdGhJbWFnZS5qc1wiO1xyXG5pbXBvcnQgUG9wdXBXaXRoRm9ybSBmcm9tIFwiLi4vY29tcG9uZW50cy9Qb3B1cFdpdGhGb3JtLmpzXCI7XHJcbmltcG9ydCBQb3B1cFdpdGhDb25maXJtYXRpb24gZnJvbSBcIi4uL2NvbXBvbmVudHMvUG9wdXBXaXRoQ29uZmlybWF0aW9uLmpzXCI7XHJcbmltcG9ydCBVc2VySW5mbyBmcm9tIFwiLi4vY29tcG9uZW50cy9Vc2VySW5mby5qc1wiO1xyXG5pbXBvcnQgeyBmb3JtVmFsaWRhdGlvblNldHRpbmdzLCBzZWxlY3RvcnMsIHBvcHVwRWRpdFVzZXIsIHBvcHVwRWRpdEF2YXRhciwgcG9wdXBBZGRDYXJkLCBwb3B1cERlbGV0ZUNhcmQgfSBmcm9tIFwiLi4vdXRpbHMvY29uc3RhbnRzLmpzXCI7XHJcbmltcG9ydCBBcGkgZnJvbSBcIi4uL2NvbXBvbmVudHMvQXBpLmpzXCI7XHJcbmltcG9ydCB7IHJlbmRlckxvYWRpbmcgfSBmcm9tIFwiLi4vdXRpbHMvdXRpbHMuanNcIjtcclxuXHJcblxyXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xyXG4vKiAgICAgICAgICAgICAgICAgICAgICAgQ3JlYXRlIGluc3RhbmNlcyBvZiB0aGUgY2xhc3NlcyAgICAgICAgICAgICAgICAgICAgICAqL1xyXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xyXG5jb25zdCB1c2VySW5mbyA9IG5ldyBVc2VySW5mbyh7XHJcbiAgbmFtZVNlbGVjdG9yOiBwb3B1cEVkaXRVc2VyLm5hbWVTZWxlY3RvcixcclxuICBkZXNjcmlwdGlvblNlbGVjdG9yOiBwb3B1cEVkaXRVc2VyLmRlc2NyaXB0aW9uU2VsZWN0b3IsXHJcbiAgYXZhdGFyU2VsZWN0b3I6IHBvcHVwRWRpdEF2YXRhci5hdmF0YXJTZWxlY3RvcixcclxufSk7XHJcblxyXG5jb25zdCBjYXJkUHJldmlld1BvcHVwID0gbmV3IFBvcHVwV2l0aEltYWdlKHNlbGVjdG9ycy5wcmV2aWV3UG9wdXApO1xyXG5jYXJkUHJldmlld1BvcHVwLnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcblxyXG5jb25zdCBhcGkgPSBuZXcgQXBpKHtcclxuICBiYXNlVXJsOiAnaHR0cHM6Ly9hcm91bmQubm9tb3JlcGFydGllcy5jby92MS9ncm91cC0xMicsXHJcbiAgaGVhZGVyczoge1xyXG4gICAgYXV0aG9yaXphdGlvbjogJ2FjY2E5ZGQzLWE2YTQtNDYyNi04OGUyLTYwNjE5NjAyYmRmOScsXHJcbiAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLFxyXG4gIH0sXHJcbn0pO1xyXG5cclxuXHJcbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXHJcbi8qICAgICAgICAgICAgICBXb3JraW5nIG9uIHByb21pc2UgYWxsIHRvIGdldCBjYXJkcyBhbmQgdXNlciBpbmZvICAgICAgICAgICAgICovXHJcbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXHJcblxyXG5Qcm9taXNlLmFsbChbYXBpLmdldFVzZXJJbmZvKCksIGFwaS5nZXRJbml0aWFsQ2FyZHMoKSBdKVxyXG4gIC50aGVuKChbdXNlckRhdGEsIGNhcmRzXSkgPT4ge1xyXG4gICAgLy8gY29uc3QgeyBuYW1lLCBkZXNjcmlwdGlvbiB9ID0gdXNlckluZm87XHJcbiAgICB1c2VySWQgPSB1c2VyRGF0YS5faWQ7XHJcbiAgICB1c2VySW5mby5zZXRVc2VySW5mbyh1c2VyRGF0YSk7XHJcbiAgICBjb25zb2xlLmxvZygndXNlcmRhdGEnLCB1c2VyRGF0YSk7XHJcbiAgICAvLyBhcGkuc2V0VXNlckluZm8oe1xyXG4gICAgLy8gICBuYW1lOiB1c2VyRGF0YS5uYW1lLFxyXG4gICAgLy8gICBhYm91dDogdXNlckRhdGEuYWJvdXQsXHJcbiAgICAvLyB9KTtcclxuICAgIGNhcmRMaXN0LnJlbmRlckl0ZW1zKGNhcmRzLnJldmVyc2UoKSk7XHJcbiAgICAvKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xyXG4gICAgLyogICAgICAgICAgICAgICAgICAgIGNvbnNvbGUgbG9nIGNhcmRzIHRvIGNoZWNrIG93bmVyIGRhdGEgICAgICAgICAgICAgICAgICAgKi9cclxuICAgIC8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXHJcbiAgICAvLyBjb25zb2xlLmxvZyh1c2VyRGF0YSk7XHJcbiAgfSlcclxuICAuY2F0Y2goKGVycikgPT4gY29uc29sZS53YXJuKCcke2Vycn0nKSk7XHJcblxyXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xyXG4vKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhbm90aGVyIGF0dGVtcHQgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAqL1xyXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xyXG5cclxuXHJcbmxldCB1c2VySWQgPSBudWxsO1xyXG5cclxuY29uc3QgY3JlYXRlQ2FyZCA9IChkYXRhKSA9PiB7XHJcbiAgY29uc3QgY2FyZCA9IG5ldyBDYXJkKFxyXG4gICAge1xyXG4gICAgICBjdXJyZW50SWQ6IHVzZXJJZCxcclxuICAgICAgZGF0YSxcclxuICAgICAgaGFuZGxlQ2FyZENsaWNrOiAoKSA9PiB7XHJcbiAgICAgICAgY2FyZFByZXZpZXdQb3B1cC5vcGVuKGRhdGEpXHJcbiAgICAgIH0sXHJcbiAgICAgIGhhbmRsZURlbGV0ZUJ1dHRvbjogKGNhcmRFbGVtZW50KSA9PiB7XHJcbiAgICAgICAgcmVtb3ZlQ2FyZFBvcHVwLm9wZW4oKCkgPT4ge1xyXG4gICAgICAgICAgYXBpXHJcbiAgICAgICAgICAucmVtb3ZlQ2FyZChkYXRhLl9pZClcclxuICAgICAgICAgIC50aGVuKCgpID0+IHtcclxuICAgICAgICAgICAgY2FyZEVsZW1lbnQucmVtb3ZlKCk7XHJcbiAgICAgICAgICAgIHJlbW92ZUNhcmRQb3B1cC5jbG9zZSgpO1xyXG4gICAgICAgICAgfSlcclxuICAgICAgICAgIC5jYXRjaCgoZXJyKSA9PiB7XHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGBUaGVyZSB3YXMgYW4gaXNzdWUgZGVsZXRpbmcgdGhpcyBjYXJkOiAke2Vycn1gKTtcclxuICAgICAgICAgIH0pO1xyXG4gICAgICB9KTtcclxuICAgIH0sXHJcblxyXG4gICAgaGFuZGxlTGlrZUJ1dHRvbjogKCkgPT4ge1xyXG4gICAgICBpZihjYXJkLmlzTGlrZWQoKSkge1xyXG4gICAgICAgIGFwaVxyXG4gICAgICAgIC5yZW1vdmVMaWtlKGRhdGEuX2lkKVxyXG4gICAgICAgIC50aGVuKChyZXMpID0+IHtcclxuICAgICAgICAgIGNhcmQuc2V0TGlrZXMocmVzLmxpa2VzKTtcclxuICAgICAgICB9KVxyXG4gICAgICAgIC5jYXRjaCgoZXJyKSA9PiB7XHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGVycik7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgYXBpXHJcbiAgICAgICAgLmFkZExpa2UoZGF0YS5faWQpXHJcbiAgICAgICAgLnRoZW4oKHJlcykgPT4ge1xyXG4gICAgICAgICAgY29uc29sZS5sb2coJ3JlcycsIHJlcyk7XHJcbiAgICAgICAgICBjYXJkLnNldExpa2VzKHJlcy5saWtlcyk7XHJcbiAgICAgICAgfSlcclxuICAgICAgICAuY2F0Y2goKGVycikgPT4ge1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhlcnIpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICB9XHJcblxyXG4gICAgfVxyXG4gICAgfSxcclxuICAgIHNlbGVjdG9ycy5jYXJkVGVtcGxhdGVcclxuICAgICk7XHJcbiAgICAvLyBjb25zb2xlLmxvZyhjYXJkKTtcclxuICAgIHJldHVybiBjYXJkO1xyXG4gIH1cclxuICBcclxuXHJcbmNvbnN0IGNhcmRMaXN0ID0gbmV3IFNlY3Rpb24oe1xyXG4gIHJlbmRlcmVyOiAoaXRlbSkgPT4ge1xyXG4gICAgY29uc3QgbmV3Q2FyZCA9IGNyZWF0ZUNhcmQoaXRlbSk7XHJcbiAgICBjb25zdCBjYXJkRWxlbWVudCA9IG5ld0NhcmQuZ2V0VmlldygpO1xyXG4gICAgY2FyZExpc3QuYWRkSXRlbShjYXJkRWxlbWVudCk7XHJcbiAgfSxcclxufSxcclxuc2VsZWN0b3JzLmNhcmRTZWN0aW9uXHJcbik7XHJcblxyXG5cclxuY29uc3QgZWRpdEZvcm0gPSBuZXcgUG9wdXBXaXRoRm9ybSh7XHJcbiAgcG9wdXBTZWxlY3RvcjogcG9wdXBFZGl0VXNlci5lZGl0TW9kYWwsXHJcbiAgaGFuZGxlRm9ybVN1Ym1pdDogKGRhdGEpID0+IHtcclxuICAgIHJlbmRlckxvYWRpbmcocG9wdXBFZGl0VXNlci5lZGl0TW9kYWwsIHRydWUpO1xyXG4gICAgYXBpXHJcbiAgICAgIC5zZXRVc2VySW5mbyh7XHJcbiAgICAgICAgbmFtZTogZGF0YS5uYW1lLFxyXG4gICAgICAgIGFib3V0OiBkYXRhLmRlc2NyaXB0aW9uLFxyXG4gICAgICB9KVxyXG4gICAgICAudGhlbigoaW5mbykgPT4ge1xyXG4gICAgICAgIHVzZXJJbmZvLnNldFVzZXJJbmZvKGluZm8pO1xyXG4gICAgICAgIGNvbnNvbGUubG9nKCdpbmZvJywgaW5mbyk7XHJcbiAgICAgICAgZWRpdEZvcm0uY2xvc2UoKTtcclxuXHJcbiAgICAgICAgLy8gdXNlckluZm8uc2V0VXNlckluZm8oe1xyXG4gICAgICAgIC8vICAgbmFtZTogaW5mby5uYW1lLFxyXG4gICAgICAgIC8vICAgZGVzY3JpcHRpb246IGluZm8uYWJvdXQsXHJcbiAgICAgICAgLy8gfSk7XHJcbiAgICAgIH0pXHJcbiAgICAgIC5jYXRjaCgoZXJyKSA9PlxyXG4gICAgICAgIGNvbnNvbGUud2FybihgVW5hYmxlIHRvIHVwZGF0ZSBwcm9maWxlIGluZm9ybWF0aW9uOiAke2Vycn1gKVxyXG4gICAgICApXHJcbiAgICAgIC5maW5hbGx5KCgpID0+IHtcclxuICAgICAgICByZW5kZXJMb2FkaW5nKHBvcHVwRWRpdFVzZXIuZWRpdE1vZGFsKTtcclxuICAgICAgfSk7XHJcbiAgfSxcclxufSk7XHJcblxyXG5jb25zdCBhdmF0YXJFZGl0ID0gbmV3IFBvcHVwV2l0aEZvcm0oe1xyXG4gIHBvcHVwU2VsZWN0b3I6IHBvcHVwRWRpdEF2YXRhci5zZWxlY3RvcixcclxuICBoYW5kbGVGb3JtU3VibWl0OiAoZGF0YSkgPT4ge1xyXG4gICAgcmVuZGVyTG9hZGluZyhwb3B1cEVkaXRBdmF0YXIuc2VsZWN0b3IsIHRydWUpO1xyXG4gICAgYXBpXHJcbiAgICAgIC5zZXRVc2VyQXZhdGFyKHsgXHJcbiAgICAgICAgYXZhdGFyOiBkYXRhLmF2YXRhciB9KVxyXG4gICAgICAudGhlbigoaW5mbykgPT4ge1xyXG4gICAgICAgIHVzZXJJbmZvLnNldEF2YXRhcih7IHVzZXJBdmF0YXI6IGluZm8uYXZhdGFyIH0pO1xyXG4gICAgICAgIGF2YXRhckVkaXQuY2xvc2UoKTtcclxuICAgICAgfSlcclxuICAgICAgLmNhdGNoKChlcnIpID0+IGNvbnNvbGUud2FybihgVW5hYmxlIGNoYW5nZSB0aGUgdXNlciBhdmF0YXI6ICR7ZXJyfWApKVxyXG4gICAgICAuZmluYWxseSgoKSA9PiB7XHJcbiAgICAgICAgcmVuZGVyTG9hZGluZyhwb3B1cEVkaXRBdmF0YXIuc2VsZWN0b3IpO1xyXG4gICAgICB9KTtcclxuICB9LFxyXG59KTtcclxuXHJcblxyXG5jb25zdCBhZGRGb3JtID0gbmV3IFBvcHVwV2l0aEZvcm0oe1xyXG4gIHBvcHVwU2VsZWN0b3I6IHBvcHVwQWRkQ2FyZC5hZGRNb2RhbCxcclxuICBoYW5kbGVGb3JtU3VibWl0OiAoZGF0YSkgPT4ge1xyXG4gICAgcmVuZGVyTG9hZGluZyhwb3B1cEFkZENhcmQuYWRkTW9kYWwsIHRydWUpO1xyXG4gICAgYXBpXHJcbiAgICAgIC5hZGRDYXJkKGRhdGEpXHJcbiAgICAgIC50aGVuKChkYXRhKSA9PiB7XHJcbiAgICAgICAgY29uc3QgbmV3Q2FyZCA9IChjcmVhdGVDYXJkKGRhdGEpKTtcclxuICAgICAgICBjYXJkTGlzdC5hZGRJdGVtKG5ld0NhcmQuZ2V0VmlldygpKTtcclxuICAgICAgICBhZGRGb3JtLmNsb3NlKCk7XHJcbiAgICAgIH0pXHJcbiAgICAgIC5jYXRjaCgoZXJyKSA9PiBjb25zb2xlLndhcm4oYFVuYWJsZSB0byBhZGQgYSBjYXJkOiAke2Vycn1gKSlcclxuICAgICAgLmZpbmFsbHkoKCkgPT4ge1xyXG4gICAgICAgIHJlbmRlckxvYWRpbmcocG9wdXBBZGRDYXJkLmFkZE1vZGFsKTtcclxuICAgICAgfSk7XHJcbiAgfSxcclxufSk7XHJcblxyXG5jb25zdCByZW1vdmVDYXJkUG9wdXAgPSBuZXcgUG9wdXBXaXRoQ29uZmlybWF0aW9uKHtcclxuICBwb3B1cFNlbGVjdG9yOiBwb3B1cERlbGV0ZUNhcmQuZGVsZXRlQ2FyZFNlbGVjdG9yLFxyXG4gIGhhbmRsZURlbGV0ZUNhcmQ6ICgpID0+IHt9LFxyXG59KVxyXG5cclxuIFxyXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xyXG4vKiAgICAgICAgICAgICAgICAgICAgICAgUHJlZmlsbCBmdW5jdGlvbiBhbmQgY29uc3RhbnRzICAgICAgICAgICAgICAgICAgICAgICAqL1xyXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xyXG4vLyBmdW5jdGlvbiBwcmVmaWxsRWRpdEZvcm0obW9kYWxXaW5kb3cpIHtcclxuLy8gICBjb25zdCB7IG5hbWUsIGRlc2NyaXB0aW9uIH0gPSB1c2VySW5mby5nZXRVc2VySW5mbygpO1xyXG4vLyAgIG5hbWVJbnB1dC52YWx1ZSA9IG5hbWU7XHJcbi8vICAgZGVzY3JpcHRpb25JbnB1dC52YWx1ZSA9IGRlc2NyaXB0aW9uO1xyXG4vLyB9XHJcblxyXG5jb25zdCBuYW1lSW5wdXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI293bmVyLW5hbWVcIik7XHJcbmNvbnN0IGRlc2NyaXB0aW9uSW5wdXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI293bmVyLWRlc2NyaXB0aW9uXCIpO1xyXG5cclxuXHJcbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXHJcbi8qICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEV2ZW50IGxpc3RlbmVycyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICovXHJcbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXHJcbmVkaXRGb3JtLnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcbmF2YXRhckVkaXQuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuYWRkRm9ybS5zZXRFdmVudExpc3RlbmVycygpO1xyXG5yZW1vdmVDYXJkUG9wdXAuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuXHJcbnBvcHVwRWRpdFVzZXIuZWRpdEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xyXG4gIGNvbnN0IGN1cnJlbnRVc2VySW5mbyA9IHVzZXJJbmZvLmdldFVzZXJJbmZvKCk7XHJcbiAgbmFtZUlucHV0LnZhbHVlID0gY3VycmVudFVzZXJJbmZvLm5hbWU7XHJcbiAgZGVzY3JpcHRpb25JbnB1dC52YWx1ZSA9IGN1cnJlbnRVc2VySW5mby5kZXNjcmlwdGlvbjtcclxuICBlZGl0Rm9ybS5vcGVuKGN1cnJlbnRVc2VySW5mbyk7XHJcbn0pO1xyXG5cclxucG9wdXBFZGl0QXZhdGFyLmJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xyXG4gIGF2YXRhckVkaXQub3BlbigpO1xyXG59KTtcclxuXHJcbnBvcHVwQWRkQ2FyZC5hZGRCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcclxuICBhZGRGb3JtLm9wZW4oKTtcclxufSk7XHJcblxyXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xyXG4vKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFZhbGlkYXRpb24gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAqL1xyXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xyXG5cclxuY29uc3QgZWRpdEZvcm1FbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF90eXBlX2VkaXQnKTtcclxuY29uc3QgYXZhdGFyRWRpdEVsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnBvcHVwX3R5cGVfYXZhdGFyJyk7XHJcbmNvbnN0IGFkZEZvcm1FbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF90eXBlX2FkZCcpO1xyXG5cclxuY29uc3QgZWRpdEZvcm1WYWxpZGF0b3IgPSBuZXcgRm9ybVZhbGlkYXRvcihmb3JtVmFsaWRhdGlvblNldHRpbmdzLCBlZGl0Rm9ybUVsKTtcclxuZWRpdEZvcm1WYWxpZGF0b3IuZW5hYmxlVmFsaWRhdGlvbigpO1xyXG5cclxuY29uc3QgYXZhdGFyRWRpdFZhbGlkYXRvciA9IG5ldyBGb3JtVmFsaWRhdG9yKGZvcm1WYWxpZGF0aW9uU2V0dGluZ3MsIGF2YXRhckVkaXRFbCk7XHJcbmF2YXRhckVkaXRWYWxpZGF0b3IuZW5hYmxlVmFsaWRhdGlvbigpO1xyXG5cclxuY29uc3QgYWRkRm9ybVZhbGlkYXRvciA9IG5ldyBGb3JtVmFsaWRhdG9yKGZvcm1WYWxpZGF0aW9uU2V0dGluZ3MsIGFkZEZvcm1FbCk7XHJcbmFkZEZvcm1WYWxpZGF0b3IuZW5hYmxlVmFsaWRhdGlvbigpO1xyXG4iXSwibmFtZXMiOlsiRm9ybVZhbGlkYXRvciIsInNldHRpbmdzIiwiZm9ybUVsZW1lbnQiLCJ0aGlzIiwiX3NldHRpbmdzIiwiX2Zvcm1FbGVtZW50IiwiX2lucHV0U2VsZWN0b3IiLCJpbnB1dFNlbGVjdG9yIiwiX3N1Ym1pdEJ1dHRvblNlbGVjdG9yIiwic3VibWl0QnV0dG9uU2VsZWN0b3IiLCJfaW5hY3RpdmVCdXR0b25DbGFzcyIsImluYWN0aXZlQnV0dG9uQ2xhc3MiLCJfaW5wdXRFcnJvckNsYXNzIiwiaW5wdXRFcnJvckNsYXNzIiwiX2Vycm9yQ2xhc3MiLCJlcnJvckNsYXNzIiwiX2lucHV0TGlzdCIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJfYnV0dG9uRWwiLCJxdWVyeVNlbGVjdG9yIiwiaW5wdXRFbCIsImVycm9yRWwiLCJpZCIsImNsYXNzTGlzdCIsImFkZCIsInRleHRDb250ZW50IiwidmFsaWRhdGlvbk1lc3NhZ2UiLCJyZW1vdmUiLCJ2YWxpZGl0eSIsInZhbGlkIiwiX2hpZGVJbnB1dEVycm9yIiwiX3Nob3dJbnB1dEVycm9yIiwiZXZlcnkiLCJkaXNhYmxlZCIsInRvZ2dsZUJ1dHRvblN0YXRlIiwiZm9yRWFjaCIsImFkZEV2ZW50TGlzdGVuZXIiLCJlIiwiX2NoZWNrSW5wdXRWYWxpZGl0eSIsImV2dCIsInByZXZlbnREZWZhdWx0IiwiX3NldHVwRXZlbnRMaXN0ZW5lcnMiLCJpbnB1dEVsZW1lbnQiLCJDYXJkIiwiY2FyZFNlbGVjdG9yIiwiZGF0YSIsImhhbmRsZUNhcmRDbGljayIsImhhbmRsZURlbGV0ZUJ1dHRvbiIsImhhbmRsZUxpa2VCdXR0b24iLCJjdXJyZW50SWQiLCJfZGF0YSIsIl9uYW1lIiwibmFtZSIsIl9saW5rIiwibGluayIsIl9jYXJkSUQiLCJfaWQiLCJfb3duZXJJZCIsIm93bmVyIiwiX2hhbmRsZUNhcmRDbGljayIsIl9oYW5kbGVEZWxldGVCdXR0b24iLCJfaGFuZGxlTGlrZUJ1dHRvbiIsIl9jdXJyZW50SWQiLCJfY2FyZFNlbGVjdG9yIiwiX2xpa2VCdXR0b24iLCJfZGVsZXRlQnV0dG9uIiwiX2VsZW1lbnQiLCJfaW1hZ2VFbGVtZW50IiwibGlrZXMiLCJzb21lIiwibGlrZSIsIl91cGRhdGVMaWtlc1ZpZXciLCJpc0xpa2VkIiwiX2xpa2VDb3VudGVyIiwibGVuZ3RoIiwiY2FyZEVsZW1lbnQiLCJkb2N1bWVudCIsImNvbnRlbnQiLCJmaXJzdEVsZW1lbnRDaGlsZCIsImNsb25lTm9kZSIsIl9nZXRUZW1wbGF0ZSIsInNyYyIsImFsdCIsIlNlY3Rpb24iLCJjb250YWluZXJTZWxlY3RvciIsInJlbmRlcmVyIiwiX3JlbmRlcmVyIiwiX2NvbnRhaW5lciIsImVsZW1lbnQiLCJwcmVwZW5kIiwiaXRlbXMiLCJpdGVtIiwiUG9wdXAiLCJwb3B1cFNlbGVjdG9yIiwia2V5IiwiY2xvc2UiLCJ0YXJnZXQiLCJfcG9wdXBFbGVtZW50IiwiX2hhbmRsZUVzY1VwIiwiYmluZCIsIl9tb3VzZUNsaWNrIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsIlBvcHVwV2l0aEltYWdlIiwiX3ByZXZpZXdJbWFnZSIsIl9wcmV2aWV3SW1hZ2VUaXRsZSIsIlBvcHVwV2l0aEZvcm0iLCJoYW5kbGVGb3JtU3VibWl0IiwiX2Zvcm0iLCJfc3VibWl0QnV0dG9uIiwiX2hhbmRsZUZvcm1TdWJtaXQiLCJpbnB1dFZhbHVlIiwiaW5wdXQiLCJ2YWx1ZSIsIl9nZXRJbnB1dFZhbHVlcyIsInJlc2V0IiwiUG9wdXBXaXRoQ29uZmlybWF0aW9uIiwiX2hhbmRsZURlbGV0ZUNhcmQiLCJkZWxldGVDYXJkIiwiVXNlckluZm8iLCJuYW1lU2VsZWN0b3IiLCJkZXNjcmlwdGlvblNlbGVjdG9yIiwiYXZhdGFyU2VsZWN0b3IiLCJkZXNjcmlwdGlvbiIsIl9kZXNjcmlwdGlvbiIsImF2YXRhciIsIl9hdmF0YXIiLCJhYm91dCIsInVzZXJBdmF0YXIiLCJmb3JtVmFsaWRhdGlvblNldHRpbmdzIiwicG9wdXBFZGl0VXNlciIsImVkaXRNb2RhbCIsImVkaXRCdXR0b24iLCJjbG9zZUJ1dHRvbiIsInBvcHVwRWRpdEF2YXRhciIsInNlbGVjdG9yIiwiYnV0dG9uIiwiZm9ybSIsImF2YXRhcklucHV0IiwicG9wdXBBZGRDYXJkIiwiYWRkTW9kYWwiLCJhZGRCdXR0b24iLCJBcGkiLCJiYXNlVXJsIiwiaGVhZGVycyIsIl9iYXNlVXJsIiwiX2hlYWRlcnMiLCJyZXMiLCJvayIsImpzb24iLCJQcm9taXNlIiwicmVqZWN0Iiwic3RhdHVzIiwiYWxsIiwiZ2V0Q2FyZExpc3QiLCJnZXRVc2VySW5mbyIsImZldGNoIiwidGhlbiIsIl9jaGVja1Jlc3BvbnNlIiwibWV0aG9kIiwiYm9keSIsIkpTT04iLCJzdHJpbmdpZnkiLCJjYXJkSUQiLCJyZW5kZXJMb2FkaW5nIiwiaXNMb2FkaW5nIiwiYWN0aXZlQnV0dG9uIiwidXNlckluZm8iLCJjYXJkUHJldmlld1BvcHVwIiwic2V0RXZlbnRMaXN0ZW5lcnMiLCJhcGkiLCJhdXRob3JpemF0aW9uIiwiZ2V0SW5pdGlhbENhcmRzIiwidXNlckRhdGEiLCJjYXJkcyIsInVzZXJJZCIsInNldFVzZXJJbmZvIiwiY29uc29sZSIsImxvZyIsImNhcmRMaXN0IiwicmVuZGVySXRlbXMiLCJyZXZlcnNlIiwiY2F0Y2giLCJlcnIiLCJ3YXJuIiwiY3JlYXRlQ2FyZCIsImNhcmQiLCJvcGVuIiwicmVtb3ZlQ2FyZFBvcHVwIiwicmVtb3ZlQ2FyZCIsInJlbW92ZUxpa2UiLCJzZXRMaWtlcyIsImFkZExpa2UiLCJnZXRWaWV3IiwiYWRkSXRlbSIsImVkaXRGb3JtIiwiaW5mbyIsImZpbmFsbHkiLCJhdmF0YXJFZGl0Iiwic2V0VXNlckF2YXRhciIsInNldEF2YXRhciIsImFkZEZvcm0iLCJhZGRDYXJkIiwibmV3Q2FyZCIsImhhbmRsZURlbGV0ZUNhcmQiLCJuYW1lSW5wdXQiLCJkZXNjcmlwdGlvbklucHV0IiwiY3VycmVudFVzZXJJbmZvIiwiZWRpdEZvcm1FbCIsImF2YXRhckVkaXRFbCIsImFkZEZvcm1FbCIsImVuYWJsZVZhbGlkYXRpb24iXSwic291cmNlUm9vdCI6IiJ9