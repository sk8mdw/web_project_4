!function(){"use strict";function e(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function t(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var n=function(){function n(t,r){var o;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,n),this._settings=t,this._formElement=r,this._inputSelector=t.inputSelector,this._submitButtonSelector=t.submitButtonSelector,this._inactiveButtonClass=t.inactiveButtonClass,this._inputErrorClass=t.inputErrorClass,this._errorClass=t.errorClass,this._inputList=function(t){if(Array.isArray(t))return e(t)}(o=r.querySelectorAll(t.inputSelector))||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(o)||function(t,n){if(t){if("string"==typeof t)return e(t,n);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?e(t,n):void 0}}(o)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(),this._buttonEl=r.querySelector(t.submitButtonSelector)}var r,o;return r=n,(o=[{key:"_showInputError",value:function(e){var t=this._formElement.querySelector("#".concat(e.id,"-error"));e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}},{key:"_hideInputError",value:function(e){var t=this._formElement.querySelector("#".concat(e.id,"-error"));e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}},{key:"_checkInputValidity",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}},{key:"toggleButtonState",value:function(){this._inputList.every((function(e){return e.validity.valid}))?(this._buttonEl.classList.remove(this._inactiveButtonClass),this._buttonEl.disabled=!1):(this._buttonEl.classList.add(this._inactiveButtonClass),this._buttonEl.disabled=!0)}},{key:"_setupEventListeners",value:function(){var e=this;this.toggleButtonState(),this._inputList.forEach((function(t){t.addEventListener("input",(function(n){e._checkInputValidity(t),e.toggleButtonState()}))}))}},{key:"enableValidation",value:function(){this._formElement.addEventListener("submit",(function(e){e.preventDefault()})),this._setupEventListeners()}},{key:"resetValidation",value:function(){var e=this;this.toggleButtonState(),this._inputList.forEach((function(t){e._hideInputError(t)}))}}])&&t(r.prototype,o),Object.defineProperty(r,"prototype",{writable:!1}),n}();function r(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var o=function(){function e(t,n){var r=t.data,o=t.handleCardClick,i=t.handleDeleteButton,a=t.handleLikeButton,u=t.currentId;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._data=r,this._name=r.name,this._link=r.link,this._cardID=r._id,this._ownerId=r.owner._id,this._handleCardClick=o,this.handleLikeButton=a,this._handleDeleteButton=i,this._currentId=u,this._cardSelector=n}var t,n;return t=e,(n=[{key:"_getTemplate",value:function(){var e=document.querySelector(this._cardSelector).content.firstElementChild.cloneNode(!0);return this._deleteButton=e.querySelector(".delete-button"),e}},{key:"getView",value:function(){return this._element=this._getTemplate(),this._imageElement=this._element.querySelector(".card__image"),this._element.querySelector(".card__title").textContent=this._name,this._likeButton=this._element.querySelector(".card__like-button"),this._deleteButton=this._element.querySelector(".card__delete-button"),this._imageElement.src=this._link,this._imageElement.alt="Photo of ".concat(this._link),this._currentId!==this._ownerId&&this._deleteButton.classList.add("delete-button_hidden"),this._setupEventListeners(),this._element}},{key:"_setupEventListeners",value:function(){var e=this;this._likeButton.addEventListener("click",(function(){return e._handleLikeButton()})),this._deleteButton.addEventListener("click",(function(){return e._handleDeleteButton(e._element)})),this._imageElement.addEventListener("click",(function(){return e._handleCardClick({name:e._name,link:e._link})}))}},{key:"_handleLikeButton",value:function(){var e=this;this._data.likes.some((function(t){return t._id===e._currentUserId}))?this._removeLike():this._addLike()}},{key:"_updateLikeCounter",value:function(){this._liked=this._element.querySelector(".like-button__counter"),this._liked.textContent=this._liked.length}},{key:"_addLike",value:function(){var e=this;this._api.addLike(this._cardId).then((function(t){e._likeButton.classList.add("card__btn-like_active"),e._likeCounter.textContent=t.likes.length,e._data=t})).catch((function(e){console.log(e)}))}},{key:"_removeLike",value:function(){var e=this;this._api.removeLike(this._cardId).then((function(t){e._likeButton.classList.remove("card__btn-like_active"),e._likeCounter.textContent=t.likes.length,e._data=t})).catch((function(e){console.log(e)}))}}])&&r(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function i(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var a=function(){function e(t,n){var r=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderer=r,this._container=document.querySelector(n)}var t,n;return t=e,(n=[{key:"addItem",value:function(e){this._container.prepend(e)}},{key:"renderItems",value:function(e){var t=this;e.forEach((function(e){t._renderer(e)}))}}])&&i(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function u(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function c(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var l=function(){function e(t){var n=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),c(this,"_handleEscUp",(function(e){"Escape"===e.key&&n.close()})),c(this,"_mouseClick",(function(e){e.target===n._popupElement&&n.close()})),this._popupElement=document.querySelector(t),this._handleEscUp=this._handleEscUp.bind(this)}var t,n;return t=e,(n=[{key:"setEventListeners",value:function(){var e=this;this._popupElement.querySelector(".popup__close-button").addEventListener("click",(function(){e.close()}))}},{key:"open",value:function(){this._popupElement.classList.add("popup_opened"),document.addEventListener("keyup",this._handleEscUp),document.addEventListener("mousedown",this._mouseClick)}},{key:"close",value:function(){this._popupElement.classList.remove("popup_opened"),document.removeEventListener("keyup",this._handleEscUp),document.removeEventListener("mousedown",this._mouseClick)}}])&&u(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function s(e){return s="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},s(e)}function p(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function f(){return f="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=d(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},f.apply(this,arguments)}function d(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=_(e)););return e}function h(e,t){return h=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},h(e,t)}function y(e,t){if(t&&("object"===s(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function _(e){return _=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},_(e)}var v=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&h(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=_(r);if(o){var n=_(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return y(this,e)});function a(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,e))._previewImage=t._popupElement.querySelector(".popup__image"),t._previewImageTitle=t._popupElement.querySelector(".popup__caption"),t}return t=a,(n=[{key:"open",value:function(e){this._previewImage.src=e.link,this._previewImage.alt="Photo of ".concat(e.link),this._previewImageTitle.textContent=e.name,f(_(a.prototype),"open",this).call(this)}}])&&p(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(l);function m(e){return m="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},m(e)}function b(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function k(){return k="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=g(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},k.apply(this,arguments)}function g(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=E(e)););return e}function w(e,t){return w=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},w(e,t)}function S(e,t){if(t&&("object"===m(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function E(e){return E=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},E(e)}var O=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&w(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=E(r);if(o){var n=E(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return S(this,e)});function a(e){var t,n=e.popupSelector,r=e.handleFormSubmit;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,n))._form=t._popupElement.querySelector(".popup__form"),t._inputList=t._popupElement.querySelectorAll(".popup__input"),t._submitButton=t._popupElement.querySelector(".popup__save-button"),t._handleFormSubmit=r,t}return t=a,(n=[{key:"_getInputValues",value:function(){var e={};return this._inputList.forEach((function(t){e[t.name]=t.value})),e}},{key:"setEventListeners",value:function(){var e=this;k(E(a.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",(function(t){t.preventDefault(),e._handleFormSubmit(e._getInputValues())}))}},{key:"close",value:function(){k(E(a.prototype),"close",this).call(this),this._form.reset()}}])&&b(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(l);function C(e){return C="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},C(e)}function L(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function j(){return j="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=P(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},j.apply(this,arguments)}function P(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=q(e)););return e}function I(e,t){return I=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},I(e,t)}function B(e,t){if(t&&("object"===C(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function q(e){return q=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},q(e)}var R=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&I(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=q(r);if(o){var n=q(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return B(this,e)});function a(e){var t,n=e.popupSelector;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,n))._handleDeleteCard=t._handleDeleteCard,t}return t=a,(n=[{key:"open",value:function(e){j(q(a.prototype),"open",this).call(this),this.deleteCard=e}},{key:"setEventListeners",value:function(){var e=this;j(q(a.prototype),"setEventListeners",this).call(this),this._popupElement.addEventListener("submit",(function(t){t.preventDefault(),e.deleteCard()}))}}])&&L(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(l);function U(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function T(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var A=function(){function e(t){var n=this,r=t.nameSelector,o=t.descriptionSelector,i=t.avatarSelector;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),T(this,"getUserInfo",(function(){return{name:n._name.textContent,description:n._description.textContent,avatar:n._avatar.src}})),T(this,"setUserInfo",(function(e){var t=e.name,r=e.description;n._name.textContent=t,n._description.textContent=r})),this._name=document.querySelector(r),this._description=document.querySelector(o),this._avatar=document.querySelector(i)}var t,n;return t=e,(n=[{key:"getUserId",value:function(){return{_id:this._id}}},{key:"setAvatar",value:function(e){var t=e.userAvatar;t&&(this._avatar.src=t)}}])&&U(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}(),x={inputSelector:".popup__input",submitButtonSelector:".popup__save-button",inactiveButtonClass:"popup__save-button_type_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__error_visible"},D=(document.querySelector(".popup_type_add"),{editModal:".popup_type_edit",nameSelector:".profile__name",descriptionSelector:".profile__description",editButton:document.querySelector(".profile__edit-button"),closeButton:document.querySelector(".popup__close-button")}),V={selector:".popup_type_avatar",avatarSelector:".profile__image",button:document.querySelector(".avatar__edit-button"),form:document.querySelector(".popup_type_avatar"),avatarInput:document.querySelector("#avatar-input")},M={addModal:".popup_type_add",addButton:document.querySelector(".profile__add-button"),closeButton:document.querySelector(".popup__close-button")};function F(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}document.querySelector(".popup__close-button");var N=function(){function e(t){var n=t.baseUrl,r=t.headers;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._baseUrl=n,this._headers=r}var t,n;return t=e,(n=[{key:"_checkResponse",value:function(e){return e.ok?e.json():Promise.reject("Error ".concat(e.status))}},{key:"getAppInfo",value:function(){return Promise.all([this.getCardList(),this.getUserInfo()])}},{key:"getInitialCards",value:function(){return fetch("".concat(this._baseUrl,"/cards"),{headers:this._headers}).then(this._checkResponse)}},{key:"getUserInfo",value:function(){return fetch("".concat(this._baseUrl,"/users/me"),{headers:this._headers}).then(this._checkResponse)}},{key:"setUserInfo",value:function(e){var t=e.name,n=e.about;return fetch("".concat(this._baseUrl,"/users/me"),{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t,about:n})}).then(this._checkResponse)}},{key:"setUserAvatar",value:function(e){var t=e.avatar;return fetch("".concat(this._baseUrl,"/users/me/avatar"),{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:t})}).then(this._checkResponse)}},{key:"addCard",value:function(e){var t=e.name,n=e.link;return fetch("".concat(this._baseUrl,"/cards"),{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:n})}).then(this._checkResponse)}},{key:"removeCard",value:function(e){return fetch("".concat(this._baseUrl,"/cards/").concat(e),{method:"DELETE",headers:this._headers}).then(this._checkResponse)}},{key:"addLike",value:function(e){return fetch("".concat(this._baseUrl,"/cards/likes/").concat(e),{method:"PUT",headers:this._headers}).then(this._checkResponse)}},{key:"removeLike",value:function(e){return fetch("".concat(this._baseUrl,"/cards/likes/").concat(e),{method:"DELETE",headers:this._headers}).then(this._checkResponse)}}])&&F(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}(),J=function(e){var t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=document.querySelector(e).querySelector(".popup__save-button");n.textContent=t?"Saving...":"Save"};function $(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var H=new A({nameSelector:D.nameSelector,descriptionSelector:D.descriptionSelector,avatarSelector:V.avatarSelector}),z=new v(".popup_type_preview");z.setEventListeners();var G=new N({baseUrl:"https://around.nomoreparties.co/v1/group-12",headers:{authorization:"acca9dd3-a6a4-4626-88e2-60619602bdf9","Content-Type":"application/json"}});Promise.all([G.getUserInfo(),G.getInitialCards()]).then((function(e){var t,n,r=(n=2,function(e){if(Array.isArray(e))return e}(t=e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,i=[],a=!0,u=!1;try{for(n=n.call(e);!(a=(r=n.next()).done)&&(i.push(r.value),!t||i.length!==t);a=!0);}catch(e){u=!0,o=e}finally{try{a||null==n.return||n.return()}finally{if(u)throw o}}return i}}(t,n)||function(e,t){if(e){if("string"==typeof e)return $(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?$(e,t):void 0}}(t,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=r[0],i=r[1];H.name,H.about,K=o._id,G.setUserInfo({name:o.name,about:o.about}),W.renderItems(i.reverse())})).catch((function(e){return console.warn("${err}")}));var K=null,Q=function(e){var t=new o({currentId:K,data:e,handleCardClick:function(){z.open(e)},handleDeleteButton:function(t){ee.open((function(){G.removeCard(e._id).then((function(){t.remove(),ee.close()})).catch((function(e){console.log("There was an issue deleting this card: ".concat(e))}))}))},handleLikeButton:function(t){return t?G.addLike(e._id):G.removeLike(e._id)}},"#cardTemplate");return console.log(t),t},W=new a({renderer:function(e){var t=Q(e).getView();W.addItem(t)}},"#placesList"),X=new O({popupSelector:D.editModal,handleFormSubmit:function(e){J(D.editModal,!0),G.setUserInfo({name:e.name,about:e.description}).then((function(e){H.setUserInfo({name:e.name,description:e.about}),X.close()})).catch((function(e){return console.warn("Unable to update profile information: ".concat(e))})).finally((function(){J(D.editModal)}))}}),Y=new O({popupSelector:V.selector,handleFormSubmit:function(e){J(V.selector,!0),G.setUserAvatar({avatar:e.avatar}).then((function(e){H.setAvatar({userAvatar:e.avatar}),Y.close()})).catch((function(e){return console.warn("Unable change the user avatar: ".concat(e))})).finally((function(){J(V.selector)}))}}),Z=new O({popupSelector:M.addModal,handleFormSubmit:function(e){J(M.addModal,!0),G.addCard(e).then((function(e){var t=Q(e);W.addItem(t.getView()),Z.close()})).catch((function(e){return console.warn("Unable to add a card: ".concat(e))})).finally((function(){J(M.addModal)}))}}),ee=new R({popupSelector:".popup_type_delete",handleDeleteCard:function(){}}),te=document.querySelector("#owner-name"),ne=document.querySelector("#owner-description");X.setEventListeners(),Y.setEventListeners(),Z.setEventListeners(),ee.setEventListeners(),D.editButton.addEventListener("click",(function(){var e=H.getUserInfo();te.value=e.name,ne.value=e.description,X.open(e)})),V.button.addEventListener("click",(function(){Y.open()})),M.addButton.addEventListener("click",(function(){Z.open()}));var re=document.querySelector(".popup_type_edit"),oe=document.querySelector(".popup_type_avatar"),ie=document.querySelector(".popup_type_add");new n(x,re).enableValidation(),new n(x,oe).enableValidation(),new n(x,ie).enableValidation()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,